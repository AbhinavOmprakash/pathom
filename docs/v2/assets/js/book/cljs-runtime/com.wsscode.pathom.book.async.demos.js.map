{"version":3,"sources":["com/wsscode/pathom/book/async/demos.cljs"],"mappings":"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","names":["com.wsscode.pathom.book.async.demos/indexes","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","js/com","js/com.wsscode","js/com.wsscode.pathom","js/com.wsscode.pathom.book","js/com.wsscode.pathom.book.async","js/com.wsscode.pathom.book.async.demos","js/com.wsscode.pathom.book.async.demos.resolver-con","method-table__4613__auto__","prefer-table__4614__auto__","method-cache__4615__auto__","cached-hierarchy__4616__auto__","hierarchy__4617__auto__","cljs.core.get.cljs$core$IFn$_invoke$arity$3","fexpr__53677","cljs.core/MultiFn","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","com.wsscode.pathom.book.async.demos/resolver-con","com.wsscode.pathom.connect/resolver-dispatch","com.wsscode.pathom.book.async.demos/defresolver","com.wsscode.pathom.connect/resolver-factory","com.wsscode.pathom.book.async.demos/fetch-json","url","c__39084__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__39085__auto__","switch__38786__auto__","state_53701","state_val_53703","statearr-53709","inst_53699","cljs.core.async.impl.ioc-helpers/return-chan","inst_53683","statearr-53713","cljs.core.async.impl.ioc-helpers/process-exception","_","cljs.core.async.impl.ioc-helpers/add-exception-frame","inst_53687","inst_53688","com.wsscode.common.async-cljs/promise->chan","cljs.core.async.impl.ioc-helpers/take!","inst_53695","inst_53696","com.wsscode.common.async-cljs/consumer-pair","inst_53697","statearr-53718","inst_53690","inst_53691","inst_53692","inst_53693","statearr-53734","state-machine__38787__auto__","ret-value__38788__auto__","result__38789__auto__","cljs.core/keyword-identical?","e53735","js/Object","ex__38790__auto__","statearr-53736","state__39086__auto__","statearr-53741","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","js/fetch","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic","G__53742","G__53743","G__53744","state_53761","state_val_53762","statearr-53766","inst_53758","inst_53745","statearr-53767","inst_53749","inst_53750","statearr-53768","inst_53752","inst_53753","com.wsscode.common.async-cljs/throw-err","inst_53754","inst_53755","inst_53756","cljs.core/PersistentHashMap","statearr-53769","statearr-53770","e53771","statearr-53772","statearr-53773","com.wsscode.pathom.book.async.demos/namespace-keys","x","ns","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core.map.cljs$core$IFn$_invoke$arity$1","p__53777","vec__53778","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","k","v","cljs.core.keyword.cljs$core$IFn$_invoke$arity$2","cljs.core/name","com.wsscode.pathom.book.async.demos/adapt-schedule","schedule","com.wsscode.pathom.book.async.demos/adapt-externals","externals","p__53787","vec__53788","p__53793","map__53794","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","com.wsscode.pathom.book.async.demos/adapt-show","show","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","G__53798","G__53799","G__53800","p__53802","map__53803","id","state_53818","state_val_53819","statearr-53820","inst_53816","inst_53805","statearr-53822","inst_53809","inst_53810","inst_53812","inst_53813","inst_53814","statearr-53824","statearr-53825","e53826","statearr-53827","statearr-53837","com.wsscode.pathom.book.async.demos/adapt-episode","episode","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","G__53883","G__53884","G__53885","p__53890","map__53891","state_53916","state_val_53917","statearr-53924","inst_53913","inst_53894","statearr-53932","inst_53900","inst_53901","inst_53902","statearr-53934","inst_53904","inst_53905","inst_53906","inst_53907","inst_53908","statearr-53935","statearr-53945","e53947","statearr-53948","statearr-53952","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","com.wsscode.pathom.book.async.demos/parser","com.wsscode.pathom.core/async-parser","cljs.core/deref","com.wsscode.pathom.core/env-plugin","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/all-async-readers","com.wsscode.pathom.core/ident-join-reader","com.wsscode.pathom.core.placeholder_reader.cljs$core$IFn$_invoke$arity$0","com.wsscode.pathom.core/error-handler-plugin","js/com.wsscode.pathom.book.async.demos.AsyncParserDemo","this__43090__auto__","js/React.Component","G__54066","G__54067","js/React.Component.prototype","G__54068","fulcro.client.primitives/default-component-prototype","goog.object/extend","fulcro.client.primitives/-register-component!","x54073","this__42008__auto__","*reconciler*-orig-val__54080","fulcro.client.primitives/*reconciler*","*depth*-orig-val__54081","fulcro.client.primitives/*depth*","*shared*-orig-val__54082","fulcro.client.primitives/*shared*","*instrument*-orig-val__54083","fulcro.client.primitives/*instrument*","*parent*-orig-val__54084","fulcro.client.primitives/*parent*","*reconciler*-temp-val__54085","fulcro.client.primitives/get-reconciler","*depth*-temp-val__54086","fulcro.client.primitives/depth","*shared*-temp-val__54087","fulcro.client.primitives.shared.cljs$core$IFn$_invoke$arity$1","*instrument*-temp-val__54088","fulcro.client.primitives/instrument","*parent*-temp-val__54089","map__54096","fulcro.client.primitives/props","x54121","p__54150","map__54152","x54163","p__54170","map__54174","this__43093__auto__","writer__43094__auto__","opt__43095__auto__","cljs.core/-write","com.wsscode.pathom.book.async.demos/AsyncParserDemo","this","random-dog-url","props","fulcro.client.data-fetch/marker-table","marker","fulcro.client.localized_dom.div.cljs$core$IFn$_invoke$arity$variadic","fulcro.client.data-fetch/loading?","fulcro.client.localized_dom.button.cljs$core$IFn$_invoke$arity$variadic","fulcro.client.data_fetch.load_field.cljs$core$IFn$_invoke$arity$variadic","fulcro.client.localized_dom.img.cljs$core$IFn$_invoke$arity$variadic","com.wsscode.pathom.book.async.demos/async-parser-demo","fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$1"],"sourcesContent":["(ns com.wsscode.pathom.book.async.demos\n  (:require [com.wsscode.pathom.book.app-types :as app-types]\n            [com.wsscode.pathom.fulcro.network :as network]\n            [com.wsscode.common.async-cljs :refer [go-catch <? <!p]]\n            [goog.object :as gobj]\n            [fulcro.client :as fulcro]\n            [fulcro.client.data-fetch :as df]\n            [fulcro.client.primitives :as fp]\n            [fulcro.client.localized-dom :as dom]\n            [com.wsscode.pathom.book.async.intro :as d.intro]\n            [com.wsscode.pathom.core :as p]\n            [com.wsscode.pathom.connect :as pc]))\n\n(def indexes (atom {}))\n(defmulti resolver-con pc/resolver-dispatch)\n\n(def defresolver (pc/resolver-factory resolver-con indexes))\n\n(defn fetch-json [url]\n  (go-catch\n    (-> (js/fetch url) <!p\n        (.json) <!p\n        (js->clj :keywordize-keys true))))\n\n(defresolver `random-dog\n  {::pc/output [:random-dog-url]\n   ::pc/cache? false}\n  (fn [_ _]\n    (go-catch\n      {:random-dog-url\n       (-> (fetch-json \"https://dog.ceo/api/breeds/image/random\") <?\n           :message)})))\n\n(defn namespace-keys [x ns]\n  (into {} (map (fn [[k v]] [(keyword ns (name k)) v])) x))\n\n(defn adapt-schedule [schedule]\n  (namespace-keys schedule \"tvmaze.schedule\"))\n\n(defn adapt-externals [externals]\n  (into {} (map (fn [[k v]] [(keyword (name k) \"id\") v])) externals))\n\n(defn adapt-show [{:keys [externals] :as show}]\n  (-> show\n      (dissoc :externals :_links)\n      (update :schedule adapt-schedule)\n      (namespace-keys \"tvmaze.show\")\n      (merge (adapt-externals externals))))\n\n(defresolver `tvmaze-show-by-id\n  {::pc/input  #{:tvmaze.show/id}\n   ::pc/output [:tvmaze.show/url\n                {:tvmaze.show/schedule [:tvmaze.schedule/time :tvmaze.schedule/days]}\n                :thetvdb/id\n                :tvrage/id\n                :tvmaze.show/weight\n                :tvmaze.show/type\n                :tvmaze.show/name\n                :tvmaze.show/id\n                {:tvmaze.show/webChannel [:id :name :country]}\n                :tvmaze.show/status\n                :tvmaze.show/language\n                {:tvmaze.show/image [:medium :original]}\n                :tvmaze.show/runtime\n                :tvmaze.show/updated\n                :imdb/id\n                {:tvmaze.show/network [:id :name {:country [:name :code :timezone]}]}\n                :tvmaze.show/officialSite\n                :tvmaze.show/summary\n                {:tvmaze.show/rating [:average]}\n                :tvmaze.show/premiered\n                :tvmaze.show/genres]}\n  (fn [_ {:keys [tvmaze.show/id]}]\n    (go-catch\n      (-> (fetch-json (str \"http://api.tvmaze.com/shows/\" id)) <?\n          adapt-show))))\n\n(defn adapt-episode [episode]\n  (-> episode\n      (dissoc :_links)\n      (namespace-keys \"tvmaze.episode\")))\n\n(defresolver `tvmaze-show-episodes\n  {::pc/input  #{:tvmaze.show/id}\n   ::pc/output [{:tvmaze.show/episodes [:tvmaze.episode/runtime\n                                        :tvmaze.episode/season\n                                        :tvmaze.episode/url\n                                        :tvmaze.episode/id\n                                        {:tvmaze.episode/image [:medium :original]}\n                                        :tvmaze.episode/airstamp\n                                        :tvmaze.episode/airtime\n                                        :tvmaze.episode/summary\n                                        :tvmaze.episode/name\n                                        :tvmaze.episode/number\n                                        :tvmaze.episode/airdate]}]}\n  (fn [_ {:keys [tvmaze.show/id]}]\n    (go-catch\n      (->> (fetch-json (str \"http://api.tvmaze.com/shows/\" id \"/episodes\")) <?\n           (mapv adapt-episode)\n           (hash-map :tvmaze.show/episodes)))))\n\n(comment\n  (go-catch\n    (let [data (<? (fetch-json \"http://api.tvmaze.com/shows/563/episodes\"))]\n      (def res data)))\n\n  (->> res (take 4))\n  (-> (map adapt-episode res) (->> (hash-map :tvmaze.show/episodes)) pc/data->shape))\n\n(def parser (p/async-parser {::p/plugins\n                             [(p/env-plugin {::p/reader             [p/map-reader\n                                                                     pc/all-async-readers\n                                                                     p/ident-join-reader\n                                                                     (p/placeholder-reader)]\n                                             ::pc/resolver-dispatch resolver-con\n                                             ::pc/indexes           @indexes})\n                              p/error-handler-plugin]}))\n\n(comment\n  (go-catch\n    (try\n      (-> (parser {} [{[:tvmaze.show/id 563] [:tvmaze.show/name\n                                              '*]}\n                      {:>/b [:random-dog-url]}]) <? js/console.log)\n      (catch :default e (js/console.error e)))))\n\n(fp/defsc AsyncParserDemo\n  [this {:keys [random-dog-url] :as props}]\n  {:ident (fn [] [::id \"singleton\"])\n   :query [::id :random-dog-url [df/marker-table ::dog-load]]}\n  (let [marker (get props [df/marker-table ::dog-load])]\n    (dom/div\n      (dom/div\n        (if (df/loading? marker)\n          (dom/button {:disabled true} \"Loading...\")\n          (dom/button {:onClick #(df/load-field this :random-dog-url {:marker ::dog-load})}\n            \"Load\")))\n      (if random-dog-url\n        (dom/div (dom/img {:src random-dog-url}))))))\n\n(def async-parser-demo (fp/factory AsyncParserDemo))\n"]}