{
"version":3,
"file":"module$node_modules$codemirror$addon$search$matchesonscrollbar.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/codemirror/addon/search/matchesonscrollbar.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$search$matchesonscrollbar\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./searchcursor\"), require(\"../scroll/annotatescrollbar\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./searchcursor\", \"../scroll/annotatescrollbar\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineExtension(\"showMatchesOnScrollbar\", function(query, caseFold, options) {\n    if (typeof options == \"string\") options = {className: options};\n    if (!options) options = {};\n    return new SearchAnnotation(this, query, caseFold, options);\n  });\n\n  function SearchAnnotation(cm, query, caseFold, options) {\n    this.cm = cm;\n    this.options = options;\n    var annotateOptions = {listenForChanges: false};\n    for (var prop in options) annotateOptions[prop] = options[prop];\n    if (!annotateOptions.className) annotateOptions.className = \"CodeMirror-search-match\";\n    this.annotation = cm.annotateScrollbar(annotateOptions);\n    this.query = query;\n    this.caseFold = caseFold;\n    this.gap = {from: cm.firstLine(), to: cm.lastLine() + 1};\n    this.matches = [];\n    this.update = null;\n\n    this.findMatches();\n    this.annotation.update(this.matches);\n\n    var self = this;\n    cm.on(\"change\", this.changeHandler = function(_cm, change) { self.onChange(change); });\n  }\n\n  var MAX_MATCHES = 1000;\n\n  SearchAnnotation.prototype.findMatches = function() {\n    if (!this.gap) return;\n    for (var i = 0; i < this.matches.length; i++) {\n      var match = this.matches[i];\n      if (match.from.line >= this.gap.to) break;\n      if (match.to.line >= this.gap.from) this.matches.splice(i--, 1);\n    }\n    var cursor = this.cm.getSearchCursor(this.query, CodeMirror.Pos(this.gap.from, 0), this.caseFold);\n    var maxMatches = this.options && this.options.maxMatches || MAX_MATCHES;\n    while (cursor.findNext()) {\n      var match = {from: cursor.from(), to: cursor.to()};\n      if (match.from.line >= this.gap.to) break;\n      this.matches.splice(i++, 0, match);\n      if (this.matches.length > maxMatches) break;\n    }\n    this.gap = null;\n  };\n\n  function offsetLine(line, changeStart, sizeChange) {\n    if (line <= changeStart) return line;\n    return Math.max(changeStart, line + sizeChange);\n  }\n\n  SearchAnnotation.prototype.onChange = function(change) {\n    var startLine = change.from.line;\n    var endLine = CodeMirror.changeEnd(change).line;\n    var sizeChange = endLine - change.to.line;\n    if (this.gap) {\n      this.gap.from = Math.min(offsetLine(this.gap.from, startLine, sizeChange), change.from.line);\n      this.gap.to = Math.max(offsetLine(this.gap.to, startLine, sizeChange), change.from.line);\n    } else {\n      this.gap = {from: change.from.line, to: endLine + 1};\n    }\n\n    if (sizeChange) for (var i = 0; i < this.matches.length; i++) {\n      var match = this.matches[i];\n      var newFrom = offsetLine(match.from.line, startLine, sizeChange);\n      if (newFrom != match.from.line) match.from = CodeMirror.Pos(newFrom, match.from.ch);\n      var newTo = offsetLine(match.to.line, startLine, sizeChange);\n      if (newTo != match.to.line) match.to = CodeMirror.Pos(newTo, match.to.ch);\n    }\n    clearTimeout(this.update);\n    var self = this;\n    this.update = setTimeout(function() { self.updateAfterChange(); }, 250);\n  };\n\n  SearchAnnotation.prototype.updateAfterChange = function() {\n    this.findMatches();\n    this.annotation.update(this.matches);\n  };\n\n  SearchAnnotation.prototype.clear = function() {\n    this.cm.off(\"change\", this.changeHandler);\n    this.annotation.clear();\n  };\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","SearchAnnotation","cm","query","caseFold","options","annotateOptions","listenForChanges","prop","className","annotation","annotateScrollbar","gap","from","firstLine","to","lastLine","matches","update","findMatches","self","on","changeHandler","this.changeHandler","_cm","change","onChange","offsetLine","line","changeStart","sizeChange","Math","max","defineExtension","prototype","SearchAnnotation.prototype.findMatches","i","length","match","splice","cursor","getSearchCursor","Pos","maxMatches","MAX_MATCHES","findNext","SearchAnnotation.prototype.onChange","startLine","endLine","changeEnd","min","newFrom","ch","newTo","clearTimeout","setTimeout","updateAfterChange","SearchAnnotation.prototype.updateAfterChange","clear","SearchAnnotation.prototype.clear","off"]
}
