{"version":3,"sources":["com/wsscode/pathom/book/intro/demo.cljs"],"mappings":";;;;AAIA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgBC,AAAQC,AAAEA;AAA1B,AAAA,AAAA,AAAA;;AAIA,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAgBM,AAAiBP;AAAjC,AAAA,AAAAE,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAA2CM;AAA3C,AAAA,AAAA,AAGoB,AAAA,AAAKA;;AAEzB,AAAKC,AACH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAC2BC,AACAC,AACAC,AACAC,AAEbC,AACC,AAAA,AAAA,AAAA,AAACC,AAAkCjB,AAAOQ,AAC1CU,AACAC","names":["com.wsscode.pathom.connect/resolver","com.wsscode.pathom.book.intro.demo/answer","_","p__53784","map__53785","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","com.wsscode.pathom.book.intro.demo/answer-plus-one","answer-to-everything","com.wsscode.pathom.book.intro.demo/parser","com.wsscode.pathom.core/parallel-parser","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/parallel-reader","com.wsscode.pathom.connect/open-ident-reader","com.wsscode.pathom.core/env-placeholder-reader","com.wsscode.pathom.connect/mutate-async","com.wsscode.pathom.connect.connect_plugin.cljs$core$IFn$_invoke$arity$1","com.wsscode.pathom.core/error-handler-plugin","com.wsscode.pathom.core/trace-plugin"],"sourcesContent":["(ns com.wsscode.pathom.book.intro.demo\n  (:require [com.wsscode.pathom.core :as p]\n            [com.wsscode.pathom.connect :as pc]))\n\n(pc/defresolver answer [_ _]\n  {::pc/output [:answer-to-everything]}\n  {:answer-to-everything 42})\n\n(pc/defresolver answer-plus-one [_ {:keys [answer-to-everything]}]\n  {::pc/input  #{:answer-to-everything}\n   ::pc/output [:answer-plus-one]}\n  {:answer-plus-one (inc answer-to-everything)})\n\n(def parser\n  (p/parallel-parser\n    {::p/env     {::p/reader [p/map-reader\n                              pc/parallel-reader\n                              pc/open-ident-reader\n                              p/env-placeholder-reader]\n                  ::p/placeholder-prefixes #{\">\"}}\n     ::p/mutate  pc/mutate-async\n     ::p/plugins [(pc/connect-plugin {::pc/register [answer answer-plus-one]})\n                  p/error-handler-plugin\n                  p/trace-plugin]}))\n"]}