{"version":3,"sources":["com/wsscode/pathom/book/intro/demo.cljs"],"mappings":";;;;AAIA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAgBC;AAAhB,AAAA,AAAAD;;AAAA,AAAwBE,AAAEA;AAA1B,AAAA,AAAA,AAAA;;AAIA,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgBO;AAAhB,AAAA,AAAAP;;AAAA,AAAAC,AAAiCF;AAAjC,AAAA,AAAAG,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAA2CM;AAA3C,AAAA,AAAA,AAGoB,AAAA,AAAKA;;AAEzB,AAAA,AAAKC,AACFX,AAAOS;AAEV,AAAKG,AACH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AACyCC,AACAC,AACAC,AACAC,AAE3BC,AACC,AAAA,AAAA,AAACC,AAAiCR,AAClCS,AACAC","names":["com.wsscode.pathom.connect/resolver","G__52996","com.wsscode.pathom.book.intro.demo/answer","_","G__52997","p__52998","map__52999","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","com.wsscode.pathom.book.intro.demo/answer-plus-one","answer-to-everything","com.wsscode.pathom.book.intro.demo/registry","com.wsscode.pathom.book.intro.demo/parser","com.wsscode.pathom.core/parser","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/reader2","com.wsscode.pathom.connect/open-ident-reader","com.wsscode.pathom.core/env-placeholder-reader","com.wsscode.pathom.connect/mutate","com.wsscode.pathom.connect.connect_plugin","com.wsscode.pathom.core/error-handler-plugin","com.wsscode.pathom.core/trace-plugin"],"sourcesContent":["(ns com.wsscode.pathom.book.intro.demo\n  (:require [com.wsscode.pathom.core :as p]\n            [com.wsscode.pathom.connect :as pc]))\n\n(pc/defresolver answer [_ _]\n  {::pc/output [:answer-to-everything]}\n  {:answer-to-everything 42})\n\n(pc/defresolver answer-plus-one [_ {:keys [answer-to-everything]}]\n  {::pc/input  #{:answer-to-everything}\n   ::pc/output [:answer-plus-one]}\n  {:answer-plus-one (inc answer-to-everything)})\n\n(def registry\n  [answer answer-plus-one])\n\n(def parser\n  (p/parser\n    {::p/env     {::p/reader               [p/map-reader\n                                            pc/reader2\n                                            pc/open-ident-reader\n                                            p/env-placeholder-reader]\n                  ::p/placeholder-prefixes #{\">\"}}\n     ::p/mutate  pc/mutate\n     ::p/plugins [(pc/connect-plugin {::pc/register registry})\n                  p/error-handler-plugin\n                  p/trace-plugin]}))\n"]}