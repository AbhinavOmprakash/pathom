{"version":3,"sources":["com/wsscode/pathom/book/core/join_env_update.cljs"],"mappings":";;;;AAIA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgBC;AAAhB,AAAA,AAAAD;;AAAA,AAA8BE,AAAIC;AAAlC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGwB,AAAA,AAAA,AAACC,AAAMF;;AAE/B,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgBO;AAAhB,AAAA,AAAAP;;AAAA,AAAAC,AAAwDH;AAAxD,AAAA,AAAAI,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAyCM;AAAzC,AAAA,AAAA,AAGaA;;AAEb,AAAA,AAAAd,AAAA,AAAA,AAAA,AAAAe,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgBG;AAAhB,AAAA,AAAAH;;AAAA,AAAAC,AAAsDZ;AAAtD,AAAA,AAAAa,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAR,AAAA,AAAAQ,AAAA,AAAA,AAAA,AAAA,AAAAP,AAAAC,AAAAM,AAAAA;AAAA,AAAAL,AAAAK,AAAA,AAAuCH;AAAvC,AAAA,AAAA,AAGaA;;AAEb,AAAA,AAAKK,AACFjB,AAAaW;AAEhB,AAAKO,AACH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AACyCC,AACAC,AACAC,AACAC,AAG1B,AAAA,AAAA,AAACC,AAAiCP,AAClCQ,AACAC","names":["com.wsscode.pathom.connect/resolver","G__65664","com.wsscode.pathom.book.core.join-env-update/env-modifier","env","input","cljs.core.assoc","G__65665","p__65666","map__65667","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","com.wsscode.pathom.book.core.join-env-update/env-read-thing","demo-env-key","G__65669","p__65670","map__65671","com.wsscode.pathom.book.core.join-env-update/global-thing","com.wsscode.pathom.book.core.join-env-update/register","com.wsscode.pathom.book.core.join-env-update/parser","com.wsscode.pathom.core/parser","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/reader2","com.wsscode.pathom.connect/open-ident-reader","com.wsscode.pathom.core/env-placeholder-reader","com.wsscode.pathom.connect.connect_plugin","com.wsscode.pathom.core/error-handler-plugin","com.wsscode.pathom.core/trace-plugin"],"sourcesContent":["(ns com.wsscode.pathom.book.core.join-env-update\n  (:require [com.wsscode.pathom.core :as p]\n            [com.wsscode.pathom.connect :as pc]))\n\n(pc/defresolver env-modifier [env input]\n  {::pc/output [{:change-env [:val]}]}\n  {:change-env {:val    123\n                ::p/env (assoc env ::demo-env-key \"modified\")}})\n\n(pc/defresolver env-read-thing [{::keys [demo-env-key]} input]\n  {::pc/cache? false\n   ::pc/output [:env-data]}\n  {:env-data demo-env-key})\n\n(pc/defresolver global-thing [{::keys [demo-env-key]} input]\n  {::pc/cache? false\n   ::pc/output [:env-data]}\n  {:env-data demo-env-key})\n\n(def register\n  [env-modifier env-read-thing])\n\n(def parser\n  (p/parser\n    {::p/env     {::p/reader               [p/map-reader\n                                            pc/reader2\n                                            pc/open-ident-reader\n                                            p/env-placeholder-reader]\n                  ::demo-env-key           \"original\"\n                  ::p/placeholder-prefixes #{\">\"}}\n     ::p/plugins [(pc/connect-plugin {::pc/register register})\n                  p/error-handler-plugin\n                  p/trace-plugin]}))\n"]}