shadow$provide.module$node_modules$codemirror$addon$scroll$annotatescrollbar=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){function Annotation(cm,options){function scheduleRedraw(delay){clearTimeout(self.doRedraw);self.doRedraw=setTimeout(function(){self.redraw()},delay)}
this.cm=cm;this.options=options;this.buttonHeight=options.scrollButtonHeight||cm.getOption("scrollButtonHeight");this.annotations=[];this.doRedraw=this.doUpdate=null;this.div=cm.getWrapperElement().appendChild(document.createElement("div"));this.div.style.cssText="position: absolute; right: 0; top: 0; z-index: 7; pointer-events: none";this.computeScale();var self=this;cm.on("refresh",this.resizeHandler=function(){clearTimeout(self.doUpdate);self.doUpdate=setTimeout(function(){self.computeScale()&&
scheduleRedraw(20)},100)});cm.on("markerAdded",this.resizeHandler);cm.on("markerCleared",this.resizeHandler);if(!1!==options.listenForChanges)cm.on("change",this.changeHandler=function(){scheduleRedraw(250)})}CodeMirror.defineExtension("annotateScrollbar",function(options){"string"==typeof options&&(options={className:options});return new Annotation(this,options)});CodeMirror.defineOption("scrollButtonHeight",0);Annotation.prototype.computeScale=function(){var cm=this.cm;cm=(cm.getWrapperElement().clientHeight-
cm.display.barHeight-2*this.buttonHeight)/cm.getScrollerElement().scrollHeight;if(cm!=this.hScale)return this.hScale=cm,!0};Annotation.prototype.update=function(annotations){this.annotations=annotations;this.redraw()};Annotation.prototype.redraw=function(compute){function getY(pos,top){curLine!=pos.line&&(curLine=pos.line,curLineObj=cm.getLineHandle(curLine));return curLineObj.widgets&&curLineObj.widgets.length||wrapping&&curLineObj.height>singleLineH?cm.charCoords(pos,"local")[top?"top":"bottom"]:
cm.heightAtLine(curLineObj,"local")+(top?0:curLineObj.height)}!1!==compute&&this.computeScale();var cm=this.cm;compute=this.hScale;var frag=document.createDocumentFragment(),anns=this.annotations,wrapping=cm.getOption("lineWrapping"),singleLineH=wrapping&&1.5*cm.defaultTextHeight(),curLine=null,curLineObj=null,lastLine=cm.lastLine();if(cm.display.barWidth)for(var i=0,nextTop;i<anns.length;i++){var ann=anns[i];if(!(ann.to.line>lastLine)){for(var top$jscomp$0=nextTop||getY(ann.from,!0)*compute,bottom=
getY(ann.to,!1)*compute;i<anns.length-1&&!(anns[i+1].to.line>lastLine);){nextTop=getY(anns[i+1].from,!0)*compute;if(nextTop>bottom+.9)break;ann=anns[++i];bottom=getY(ann.to,!1)*compute}if(bottom!=top$jscomp$0){bottom=Math.max(bottom-top$jscomp$0,3);var elt=frag.appendChild(document.createElement("div"));elt.style.cssText="position: absolute; right: 0px; width: "+Math.max(cm.display.barWidth-1,2)+"px; top: "+(top$jscomp$0+this.buttonHeight)+"px; height: "+bottom+"px";elt.className=this.options.className;
ann.id&&elt.setAttribute("annotation-id",ann.id)}}}this.div.textContent="";this.div.appendChild(frag)};Annotation.prototype.clear=function(){this.cm.off("refresh",this.resizeHandler);this.cm.off("markerAdded",this.resizeHandler);this.cm.off("markerCleared",this.resizeHandler);this.changeHandler&&this.cm.off("change",this.changeHandler);this.div.parentNode.removeChild(this.div)}})}
//# sourceMappingURL=module$node_modules$codemirror$addon$scroll$annotatescrollbar.js.map
