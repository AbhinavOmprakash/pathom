{
"version":3,
"file":"module$node_modules$graphql_language_service_parser$dist$Rules.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/graphql-language-service-parser/dist/Rules.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$graphql_language_service_parser$dist$Rules\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParseRules = exports.LexRules = exports.isIgnored = undefined;\n\nvar _RuleHelpers = require('./RuleHelpers');\n\n/**\n  * Whitespace tokens defined in GraphQL spec.\n  */\n/**\n *  Copyright (c) Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n *  \n */\n\nvar isIgnored = exports.isIgnored = function isIgnored(ch) {\n  return ch === ' ' || ch === '\\t' || ch === ',' || ch === '\\n' || ch === '\\r' || ch === '\\uFEFF';\n};\n\n/**\n * The lexer rules. These are exactly as described by the spec.\n */\nvar LexRules = exports.LexRules = {\n  // The Name token.\n  Name: /^[_A-Za-z][_0-9A-Za-z]*/,\n\n  // All Punctuation used in GraphQL\n  Punctuation: /^(?:!|\\$|\\(|\\)|\\.\\.\\.|:|=|@|\\[|]|\\{|\\||\\})/,\n\n  // Combines the IntValue and FloatValue tokens.\n  Number: /^-?(?:0|(?:[1-9][0-9]*))(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?/,\n\n  // Note the closing quote is made optional as an IDE experience improvment.\n  String: /^\"(?:[^\"\\\\]|\\\\(?:\"|\\/|\\\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?/,\n\n  // Comments consume entire lines.\n  Comment: /^#.*/\n};\n\n/**\n * The parser rules. These are very close to, but not exactly the same as the\n * spec. Minor deviations allow for a simpler implementation. The resulting\n * parser can parse everything the spec declares possible.\n */\nvar ParseRules = exports.ParseRules = {\n  Document: [(0, _RuleHelpers.list)('Definition')],\n  Definition: function Definition(token) {\n    switch (token.value) {\n      case '{':\n        return 'ShortQuery';\n      case 'query':\n        return 'Query';\n      case 'mutation':\n        return 'Mutation';\n      case 'subscription':\n        return 'Subscription';\n      case 'fragment':\n        return 'FragmentDefinition';\n      case 'schema':\n        return 'SchemaDef';\n      case 'scalar':\n        return 'ScalarDef';\n      case 'type':\n        return 'ObjectTypeDef';\n      case 'interface':\n        return 'InterfaceDef';\n      case 'union':\n        return 'UnionDef';\n      case 'enum':\n        return 'EnumDef';\n      case 'input':\n        return 'InputDef';\n      case 'extend':\n        return 'ExtendDef';\n      case 'directive':\n        return 'DirectiveDef';\n    }\n  },\n\n  // Note: instead of \"Operation\", these rules have been separated out.\n  ShortQuery: ['SelectionSet'],\n  Query: [word('query'), (0, _RuleHelpers.opt)(name('def')), (0, _RuleHelpers.opt)('VariableDefinitions'), (0, _RuleHelpers.list)('Directive'), 'SelectionSet'],\n  Mutation: [word('mutation'), (0, _RuleHelpers.opt)(name('def')), (0, _RuleHelpers.opt)('VariableDefinitions'), (0, _RuleHelpers.list)('Directive'), 'SelectionSet'],\n  Subscription: [word('subscription'), (0, _RuleHelpers.opt)(name('def')), (0, _RuleHelpers.opt)('VariableDefinitions'), (0, _RuleHelpers.list)('Directive'), 'SelectionSet'],\n  VariableDefinitions: [(0, _RuleHelpers.p)('('), (0, _RuleHelpers.list)('VariableDefinition'), (0, _RuleHelpers.p)(')')],\n  VariableDefinition: ['Variable', (0, _RuleHelpers.p)(':'), 'Type', (0, _RuleHelpers.opt)('DefaultValue')],\n  Variable: [(0, _RuleHelpers.p)('$', 'variable'), name('variable')],\n  DefaultValue: [(0, _RuleHelpers.p)('='), 'Value'],\n  SelectionSet: [(0, _RuleHelpers.p)('{'), (0, _RuleHelpers.list)('Selection'), (0, _RuleHelpers.p)('}')],\n  Selection: function Selection(token, stream) {\n    return token.value === '...' ? stream.match(/[\\s\\u00a0,]*(on\\b|@|{)/, false) ? 'InlineFragment' : 'FragmentSpread' : stream.match(/[\\s\\u00a0,]*:/, false) ? 'AliasedField' : 'Field';\n  },\n\n  // Note: this minor deviation of \"AliasedField\" simplifies the lookahead.\n  AliasedField: [name('property'), (0, _RuleHelpers.p)(':'), name('qualifier'), (0, _RuleHelpers.opt)('Arguments'), (0, _RuleHelpers.list)('Directive'), (0, _RuleHelpers.opt)('SelectionSet')],\n  Field: [name('property'), (0, _RuleHelpers.opt)('Arguments'), (0, _RuleHelpers.list)('Directive'), (0, _RuleHelpers.opt)('SelectionSet')],\n  Arguments: [(0, _RuleHelpers.p)('('), (0, _RuleHelpers.list)('Argument'), (0, _RuleHelpers.p)(')')],\n  Argument: [name('attribute'), (0, _RuleHelpers.p)(':'), 'Value'],\n  FragmentSpread: [(0, _RuleHelpers.p)('...'), name('def'), (0, _RuleHelpers.list)('Directive')],\n  InlineFragment: [(0, _RuleHelpers.p)('...'), (0, _RuleHelpers.opt)('TypeCondition'), (0, _RuleHelpers.list)('Directive'), 'SelectionSet'],\n  FragmentDefinition: [word('fragment'), (0, _RuleHelpers.opt)((0, _RuleHelpers.butNot)(name('def'), [word('on')])), 'TypeCondition', (0, _RuleHelpers.list)('Directive'), 'SelectionSet'],\n  TypeCondition: [word('on'), 'NamedType'],\n  // Variables could be parsed in cases where only Const is expected by spec.\n  Value: function Value(token) {\n    switch (token.kind) {\n      case 'Number':\n        return 'NumberValue';\n      case 'String':\n        return 'StringValue';\n      case 'Punctuation':\n        switch (token.value) {\n          case '[':\n            return 'ListValue';\n          case '{':\n            return 'ObjectValue';\n          case '$':\n            return 'Variable';\n        }\n        return null;\n      case 'Name':\n        switch (token.value) {\n          case 'true':\n          case 'false':\n            return 'BooleanValue';\n        }\n        if (token.value === 'null') {\n          return 'NullValue';\n        }\n        return 'EnumValue';\n    }\n  },\n\n  NumberValue: [(0, _RuleHelpers.t)('Number', 'number')],\n  StringValue: [(0, _RuleHelpers.t)('String', 'string')],\n  BooleanValue: [(0, _RuleHelpers.t)('Name', 'builtin')],\n  NullValue: [(0, _RuleHelpers.t)('Name', 'keyword')],\n  EnumValue: [name('string-2')],\n  ListValue: [(0, _RuleHelpers.p)('['), (0, _RuleHelpers.list)('Value'), (0, _RuleHelpers.p)(']')],\n  ObjectValue: [(0, _RuleHelpers.p)('{'), (0, _RuleHelpers.list)('ObjectField'), (0, _RuleHelpers.p)('}')],\n  ObjectField: [name('attribute'), (0, _RuleHelpers.p)(':'), 'Value'],\n  Type: function Type(token) {\n    return token.value === '[' ? 'ListType' : 'NonNullType';\n  },\n\n  // NonNullType has been merged into ListType to simplify.\n  ListType: [(0, _RuleHelpers.p)('['), 'Type', (0, _RuleHelpers.p)(']'), (0, _RuleHelpers.opt)((0, _RuleHelpers.p)('!'))],\n  NonNullType: ['NamedType', (0, _RuleHelpers.opt)((0, _RuleHelpers.p)('!'))],\n  NamedType: [type('atom')],\n  Directive: [(0, _RuleHelpers.p)('@', 'meta'), name('meta'), (0, _RuleHelpers.opt)('Arguments')],\n  // GraphQL schema language\n  SchemaDef: [word('schema'), (0, _RuleHelpers.list)('Directive'), (0, _RuleHelpers.p)('{'), (0, _RuleHelpers.list)('OperationTypeDef'), (0, _RuleHelpers.p)('}')],\n  OperationTypeDef: [name('keyword'), (0, _RuleHelpers.p)(':'), name('atom')],\n  ScalarDef: [word('scalar'), name('atom'), (0, _RuleHelpers.list)('Directive')],\n  ObjectTypeDef: [word('type'), name('atom'), (0, _RuleHelpers.opt)('Implements'), (0, _RuleHelpers.list)('Directive'), (0, _RuleHelpers.p)('{'), (0, _RuleHelpers.list)('FieldDef'), (0, _RuleHelpers.p)('}')],\n  Implements: [word('implements'), (0, _RuleHelpers.list)('NamedType')],\n  FieldDef: [name('property'), (0, _RuleHelpers.opt)('ArgumentsDef'), (0, _RuleHelpers.p)(':'), 'Type', (0, _RuleHelpers.list)('Directive')],\n  ArgumentsDef: [(0, _RuleHelpers.p)('('), (0, _RuleHelpers.list)('InputValueDef'), (0, _RuleHelpers.p)(')')],\n  InputValueDef: [name('attribute'), (0, _RuleHelpers.p)(':'), 'Type', (0, _RuleHelpers.opt)('DefaultValue'), (0, _RuleHelpers.list)('Directive')],\n  InterfaceDef: [word('interface'), name('atom'), (0, _RuleHelpers.list)('Directive'), (0, _RuleHelpers.p)('{'), (0, _RuleHelpers.list)('FieldDef'), (0, _RuleHelpers.p)('}')],\n  UnionDef: [word('union'), name('atom'), (0, _RuleHelpers.list)('Directive'), (0, _RuleHelpers.p)('='), (0, _RuleHelpers.list)('UnionMember', (0, _RuleHelpers.p)('|'))],\n  UnionMember: ['NamedType'],\n  EnumDef: [word('enum'), name('atom'), (0, _RuleHelpers.list)('Directive'), (0, _RuleHelpers.p)('{'), (0, _RuleHelpers.list)('EnumValueDef'), (0, _RuleHelpers.p)('}')],\n  EnumValueDef: [name('string-2'), (0, _RuleHelpers.list)('Directive')],\n  InputDef: [word('input'), name('atom'), (0, _RuleHelpers.list)('Directive'), (0, _RuleHelpers.p)('{'), (0, _RuleHelpers.list)('InputValueDef'), (0, _RuleHelpers.p)('}')],\n  ExtendDef: [word('extend'), 'ObjectTypeDef'],\n  DirectiveDef: [word('directive'), (0, _RuleHelpers.p)('@', 'meta'), name('meta'), (0, _RuleHelpers.opt)('ArgumentsDef'), word('on'), (0, _RuleHelpers.list)('DirectiveLocation', (0, _RuleHelpers.p)('|'))],\n  DirectiveLocation: [name('string-2')]\n};\n\n// A keyword Token.\nfunction word(value) {\n  return {\n    style: 'keyword',\n    match: function match(token) {\n      return token.kind === 'Name' && token.value === value;\n    }\n  };\n}\n\n// A Name Token which will decorate the state with a `name`.\nfunction name(style) {\n  return {\n    style: style,\n    match: function match(token) {\n      return token.kind === 'Name';\n    },\n    update: function update(state, token) {\n      state.name = token.value;\n    }\n  };\n}\n\n// A Name Token which will decorate the previous state with a `type`.\nfunction type(style) {\n  return {\n    style: style,\n    match: function match(token) {\n      return token.kind === 'Name';\n    },\n    update: function update(state, token) {\n      if (state.prevState && state.prevState.prevState) {\n        state.name = token.value;\n        state.prevState.prevState.type = token.value;\n      }\n    }\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","word","value","style","match","token","kind","name","update","state","Object","defineProperty","ParseRules","LexRules","isIgnored","undefined","_RuleHelpers","exports.isIgnored","ch","Name","Punctuation","Number","String","Comment","Document","list","Definition","ShortQuery","Query","opt","Mutation","Subscription","VariableDefinitions","p","VariableDefinition","Variable","DefaultValue","SelectionSet","Selection","stream","AliasedField","Field","Arguments","Argument","FragmentSpread","InlineFragment","FragmentDefinition","butNot","TypeCondition","Value","NumberValue","t","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Type","ListType","NonNullType","NamedType","type","prevState","Directive","SchemaDef","OperationTypeDef","ScalarDef","ObjectTypeDef","Implements","FieldDef","ArgumentsDef","InputValueDef","InterfaceDef","UnionDef","UnionMember","EnumDef","EnumValueDef","InputDef","ExtendDef","DirectiveDef","DirectiveLocation"]
}
