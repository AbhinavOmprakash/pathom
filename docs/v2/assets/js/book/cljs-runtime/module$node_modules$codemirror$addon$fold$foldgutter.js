shadow$provide.module$node_modules$codemirror$addon$fold$foldgutter=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror"),require("module$node_modules$codemirror$addon$fold$foldcode")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","./foldcode"],mod):mod(CodeMirror)})(function(CodeMirror){function State(options){this.options=options;this.from=this.to=0}function isFolded(cm,
line){cm=cm.findMarks(Pos(line,0),Pos(line+1,0));for(var i=0;i<cm.length;++i)if(cm[i].__isFold&&cm[i].find().from.line==line)return cm[i]}function marker(spec){if("string"==typeof spec){var elt=document.createElement("div");elt.className=spec+" CodeMirror-guttermarker-subtle";return elt}return spec.cloneNode(!0)}function updateFoldInfo(cm,from,to){var opts=cm.state.foldGutter.options,cur=from,minSize=cm.foldOption(opts,"minFoldSize"),func=cm.foldOption(opts,"rangeFinder");cm.eachLine(from,to,function(line){var mark=
null;if(isFolded(cm,cur))mark=marker(opts.indicatorFolded);else{var pos=Pos(cur,0);(pos=func&&func(cm,pos))&&pos.to.line-pos.from.line>=minSize&&(mark=marker(opts.indicatorOpen))}cm.setGutterMarker(line,opts.gutter,mark);++cur})}function updateInViewport(cm){var vp=cm.getViewport(),state=cm.state.foldGutter;state&&(cm.operation(function(){updateFoldInfo(cm,vp.from,vp.to)}),state.from=vp.from,state.to=vp.to)}function onGutterClick(cm,line,gutter){var state=cm.state.foldGutter;state&&(state=state.options,
gutter==state.gutter&&((gutter=isFolded(cm,line))?gutter.clear():cm.foldCode(Pos(line,0),state.rangeFinder)))}function onChange(cm){var state=cm.state.foldGutter;if(state){var opts=state.options;state.from=state.to=0;clearTimeout(state.changeUpdate);state.changeUpdate=setTimeout(function(){updateInViewport(cm)},opts.foldOnChangeTimeSpan||600)}}function onViewportChange(cm){var state=cm.state.foldGutter;if(state){var opts=state.options;clearTimeout(state.changeUpdate);state.changeUpdate=setTimeout(function(){var vp=
cm.getViewport();state.from==state.to||20<vp.from-state.to||20<state.from-vp.to?updateInViewport(cm):cm.operation(function(){vp.from<state.from&&(updateFoldInfo(cm,vp.from,state.from),state.from=vp.from);vp.to>state.to&&(updateFoldInfo(cm,state.to,vp.to),state.to=vp.to)})},opts.updateViewportTimeSpan||400)}}function onFold(cm,from){var state=cm.state.foldGutter;state&&(from=from.line,from>=state.from&&from<state.to&&updateFoldInfo(cm,from,from+1))}CodeMirror.defineOption("foldGutter",!1,function(cm,
val,old){old&&old!=CodeMirror.Init&&(cm.clearGutter(cm.state.foldGutter.options.gutter),cm.state.foldGutter=null,cm.off("gutterClick",onGutterClick),cm.off("change",onChange),cm.off("viewportChange",onViewportChange),cm.off("fold",onFold),cm.off("unfold",onFold),cm.off("swapDoc",onChange));val&&(old=cm.state,!0===val&&(val={}),null==val.gutter&&(val.gutter="CodeMirror-foldgutter"),null==val.indicatorOpen&&(val.indicatorOpen="CodeMirror-foldgutter-open"),null==val.indicatorFolded&&(val.indicatorFolded=
"CodeMirror-foldgutter-folded"),old.foldGutter=new State(val),updateInViewport(cm),cm.on("gutterClick",onGutterClick),cm.on("change",onChange),cm.on("viewportChange",onViewportChange),cm.on("fold",onFold),cm.on("unfold",onFold),cm.on("swapDoc",onChange))});var Pos=CodeMirror.Pos})}
//# sourceMappingURL=module$node_modules$codemirror$addon$fold$foldgutter.js.map
