{
"version":3,
"file":"module$node_modules$codemirror$addon$display$placeholder.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/codemirror/addon/display/placeholder.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$display$placeholder\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  CodeMirror.defineOption(\"placeholder\", \"\", function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.on(\"blur\", onBlur);\n      cm.on(\"change\", onChange);\n      cm.on(\"swapDoc\", onChange);\n      onChange(cm);\n    } else if (!val && prev) {\n      cm.off(\"blur\", onBlur);\n      cm.off(\"change\", onChange);\n      cm.off(\"swapDoc\", onChange);\n      clearPlaceholder(cm);\n      var wrapper = cm.getWrapperElement();\n      wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\");\n    }\n\n    if (val && !cm.hasFocus()) onBlur(cm);\n  });\n\n  function clearPlaceholder(cm) {\n    if (cm.state.placeholder) {\n      cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\n      cm.state.placeholder = null;\n    }\n  }\n  function setPlaceholder(cm) {\n    clearPlaceholder(cm);\n    var elt = cm.state.placeholder = document.createElement(\"pre\");\n    elt.style.cssText = \"height: 0; overflow: visible\";\n    elt.style.direction = cm.getOption(\"direction\");\n    elt.className = \"CodeMirror-placeholder\";\n    var placeHolder = cm.getOption(\"placeholder\")\n    if (typeof placeHolder == \"string\") placeHolder = document.createTextNode(placeHolder)\n    elt.appendChild(placeHolder)\n    cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\n  }\n\n  function onBlur(cm) {\n    if (isEmpty(cm)) setPlaceholder(cm);\n  }\n  function onChange(cm) {\n    var wrapper = cm.getWrapperElement(), empty = isEmpty(cm);\n    wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\") + (empty ? \" CodeMirror-empty\" : \"\");\n\n    if (empty) setPlaceholder(cm);\n    else clearPlaceholder(cm);\n  }\n\n  function isEmpty(cm) {\n    return (cm.lineCount() === 1) && (cm.getLine(0) === \"\");\n  }\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","clearPlaceholder","cm","state","placeholder","parentNode","removeChild","setPlaceholder","elt","document","createElement","style","cssText","direction","getOption","className","placeHolder","createTextNode","appendChild","display","lineSpace","insertBefore","firstChild","onBlur","isEmpty","onChange","wrapper","getWrapperElement","empty","replace","lineCount","getLine","defineOption","val","old","prev","Init","on","off","hasFocus"]
}
