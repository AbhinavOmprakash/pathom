{
"version":3,
"file":"module$node_modules$codemirror$addon$search$searchcursor.js",
"lineCount":16,
"mappings":"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",
"sources":["node_modules/codemirror/addon/search/searchcursor.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$search$searchcursor\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp) {\n    var cutOff = 0, match\n    for (;;) {\n      regexp.lastIndex = cutOff\n      var newMatch = regexp.exec(string)\n      if (!newMatch) return match\n      match = newMatch\n      cutOff = match.index + (match[0].length || 1)\n      if (cutOff == string.length) return match\n    }\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      if (ch > -1) string = string.slice(0, ch)\n      var match = lastMatchIn(string, regexp)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunk; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine.slice(0, start.ch) : curLine + \"\\n\" + string\n      }\n      chunk *= 2\n\n      var match = lastMatchIn(string, regexp)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var result = this.matches(reverse, this.doc.clipPos(reverse ? this.pos.from : this.pos.to))\n\n      // Implements weird auto-growing behavior on null-matches for\n      // backwards-compatiblity with the vim code (unfortunately)\n      while (result && CodeMirror.cmpPos(result.from, result.to) == 0) {\n        if (reverse) {\n          if (result.from.ch) result.from = Pos(result.from.line, result.from.ch - 1)\n          else if (result.from.line == this.doc.firstLine()) result = null\n          else result = this.matches(reverse, this.doc.clipPos(Pos(result.from.line - 1)))\n        } else {\n          if (result.to.ch < this.doc.getLine(result.to.line).length) result.to = Pos(result.to.line, result.to.ch + 1)\n          else if (result.to.line == this.doc.lastLine()) result = null\n          else result = this.matches(reverse, Pos(result.to.line + 1, 0))\n        }\n      }\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","ensureFlags","regexp","flags","target","ignoreCase","multiline","i","length","indexOf","charAt","current","RegExp","source","searchRegexpForward","doc","start","line","ch","last","lastLine","lastIndex","match","string","getLine","exec","from","Pos","index","to","searchRegexpForwardMultiline","test","chunk","curLine","before","slice","split","inside","startLine","startCh","lastMatchIn","cutOff","newMatch","searchRegexpBackward","first","firstLine","searchRegexpBackwardMultiline","adjustPos","orig","folded","pos","foldFunc","min","max","Math","mid","len","searchStringForward","query","caseFold","fold","doFold","noFold","lines","found","cutFrom","end","endString","searchStringBackward","lastIndexOf","top","topString","SearchCursor","options","atOccurrence","clipPos","matches","this.matches","reverse","String","prototype","normalize","str","toLowerCase","findNext","find","findPrevious","result","cmpPos","replace","newText","origin","splitLines","replaceRange","defineExtension","defineDocExtension","ranges","cur","getSearchCursor","getCursor","push","anchor","head","setSelections"]
}
