{"version":3,"sources":["com/wsscode/pathom/viz/trace.cljs"],"mappings":"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","names":["com.wsscode.pathom.viz.trace/render-trace","this","map__50953","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","trace-data","on-show-details","fulcro.client.primitives/props","container","goog.object/get","svg","goog.object/set","js/module$com$wsscode$pathom$viz$d3_trace.renderPathomTrace","cljs.core/clj->js","com.wsscode.pathom.viz.helpers/stringify-keyword-values","or__4131__auto__","cljs.core/identity","com.wsscode.pathom.viz.trace/recompute-trace-size","js/module$com$wsscode$pathom$viz$d3_trace.updateTraceSize","G__50974","js/com","js/com.wsscode","js/com.wsscode.pathom","js/com.wsscode.pathom.viz","js/com.wsscode.pathom.viz.trace","js/com.wsscode.pathom.viz.trace.D3Trace","this__44802__auto__","js/React.Component","goog.object/extend","js/React.Component.prototype","fulcro.client.primitives/default-component-prototype","fulcro.client.primitives/-register-component!","x50990","this__43720__auto__","*reconciler*-orig-val__50991","fulcro.client.primitives/*reconciler*","*depth*-orig-val__50992","fulcro.client.primitives/*depth*","*shared*-orig-val__50993","fulcro.client.primitives/*shared*","*instrument*-orig-val__50994","fulcro.client.primitives/*instrument*","*parent*-orig-val__50995","fulcro.client.primitives/*parent*","*reconciler*-temp-val__50996","fulcro.client.primitives/get-reconciler","*depth*-temp-val__50997","fulcro.client.primitives/depth","*shared*-temp-val__50998","fulcro.client.primitives.shared","*instrument*-temp-val__50999","fulcro.client.primitives/instrument","*parent*-temp-val__51000","prev-props__43697__auto__","prev-state__43698__auto__","snapshot__43699__auto__","this__43696__auto__","snapshot50985","ident__43700__auto__","fulcro.client.primitives/ident","next-ident__43701__auto__","cljs.core.not_EQ_","idxr__43702__auto__","cljs.core.get_in","cljs.core.swap_BANG_","indexes__43703__auto__","cljs.core.update_in","cljs.core/disj","cljs.core.fnil","cljs.core/conj","this__43704__auto__","reconciler__43705__auto__","lifecycle__43706__auto__","indexer__43707__auto__","fulcro.client.impl.protocols/index-component!","x51024","_","x51031","this__44805__auto__","writer__44806__auto__","opt__44807__auto__","cljs.core/-write","com.wsscode.pathom.viz.trace/D3Trace","js/module$com$wsscode$pathom$viz$detect_element_size.addResizeListener","prev-props","cljs.core._EQ_","error","info","fulcro.client.primitives.set_state_BANG_","p1__50978#","fulcro.client.localized_dom.div","fulcro.client.primitives.get_state","p1__50979#","fulcro.client.localized_dom.svg","com.wsscode.pathom.viz.trace/d3-trace","fulcro.client.primitives.factory"],"sourcesContent":["(ns com.wsscode.pathom.viz.trace\n  (:require [\"./d3-trace\" :refer [renderPathomTrace updateTraceSize]]\n            [\"./detect-element-size\" :refer [addResizeListener]]\n            [clojure.walk :as walk]\n            [com.wsscode.pathom.viz.helpers :as h]\n            [fulcro.client.localized-dom :as dom]\n            [fulcro.client.mutations :as fm]\n            [fulcro.client.primitives :as fp]\n            [goog.object :as gobj]))\n\n(defn render-trace [this]\n  (let [{::keys [trace-data on-show-details]} (-> this fp/props)\n        container (gobj/get this \"svgContainer\")\n        svg (gobj/get this \"svg\")]\n    (gobj/set svg \"innerHTML\" \"\")\n    (gobj/set this \"renderedData\"\n      (renderPathomTrace svg\n        (clj->js {:svgWidth    (gobj/get container \"clientWidth\")\n                  :svgHeight   (gobj/get container \"clientHeight\")\n                  :data        (h/stringify-keyword-values trace-data)\n                  :showDetails (or on-show-details identity)})))))\n\n(defn recompute-trace-size [this]\n  (let [container (gobj/get this \"svgContainer\")]\n    (updateTraceSize\n      (doto (gobj/get this \"renderedData\")\n        (gobj/set \"svgWidth\" (gobj/get container \"clientWidth\"))\n        (gobj/set \"svgHeight\" (gobj/get container \"clientHeight\"))))))\n\n(fp/defsc D3Trace [this _]\n  {:css\n   [[:.container {:flex      1\n                  :max-width \"100%\"}]\n\n    [:$pathom-attribute\n     {:fill    \"#d4d4d4\"\n      :opacity \"0.5\"}\n\n     [:&:hover\n      {:fill \"#94a0ad\"}]]\n\n    [:$pathom-attribute-bounds\n     {:fill             \"none\"\n      :opacity          \"0.5\"\n      :stroke           \"#000\"\n      :stroke-dasharray \"5 1\"\n      :visibility       \"hidden\"}]\n\n    [:$pathom-detail-marker\n     {:fill    \"#a4e3bf\"\n      :opacity \"0.9\"}\n     [:&:hover\n      {:opacity \"1\"}]]\n\n    [:$pathom-event-waiting-resolver\n     {:fill \"#de5615\"}]\n\n    [:$pathom-event-skip-wait-key\n     {:fill \"#de5615\"}]\n\n    [:$pathom-event-external-wait-key\n     {:fill \"#de5615\"}]\n\n    [:$pathom-event-call-resolver\n     {:fill \"#af9df4\"}]\n\n    [:$pathom-event-call-resolver-batch\n     {:fill \"rgba(42, 0, 208, 0.5)\"}]\n\n    [:$pathom-event-schedule-resolver\n     {:fill \"#efaf42\"}]\n\n    [:$pathom-event-error\n     {:fill \"#bb0808\"}]\n\n    [:$pathom-label-text\n     {:font-family    \"sans-serif\"\n      :fill           \"#222\"\n      :font-size      \"11px\"\n      :pointer-events \"none\"}]\n\n    [:$pathom-vruler\n     {:stroke       \"#2b98f0\"\n      :stroke-width \"2px\"\n      :visibility   \"hidden\"}]\n\n    [:$pathom-axis\n     [:line\n      {:stroke \"#e5e5e5\"}]]\n\n    [:$pathom-tooltip\n     {:position       \"fixed\"\n      :pointer-events \"none\"\n      :font-size      \"12px\"\n      :font-family    \"sans-serif\"\n      :background     \"#fff\"\n      :padding        \"1px 6px\"\n      :word-break     \"break-all\"\n      :box-shadow     \"#00000069 0px 1px 3px 0px\"\n      :white-space    \"nowrap\"\n      :top            \"-1000px\"\n      :left           \"-1000px\"\n      :z-index        \"10\"}]\n\n    [:$pathom-details-count\n     {:background    \"#8bdc47\"\n      :border-radius \"7px\"\n      :padding       \"1px 5px\"\n      :font-size     \"10px\"\n      :font-family   \"sans-serif\"}]\n\n    [:$pathom-children-count\n     {:background    \"#d2a753\"\n      :border-radius \"7px\"\n      :padding       \"1px 5px\"\n      :font-size     \"10px\"\n      :font-family   \"sans-serif\"}]\n\n    [:$pathom-attribute-toggle-children\n     {:cursor      \"default\"\n      :fill        \"#757575\"\n      :font-size   \"16px\"\n      :font-family \"monospace\"\n      :font-weight \"bold\"\n      :text-anchor \"middle\"\n      :transform   \"translate(-8px, 13px)\"}]]\n\n   :componentDidMount\n   (fn []\n     (render-trace this)\n     (addResizeListener (gobj/get this \"svgContainer\") #(recompute-trace-size this)))\n\n   :componentDidUpdate\n   (fn [prev-props _]\n     (if (= (-> prev-props ::trace-data)\n            (-> this fp/props ::trace-data))\n       (recompute-trace-size this)\n       (render-trace this)))\n\n   :componentDidCatch\n   (fn [error info]\n     (fp/set-state! this {::error-catch? true}))}\n\n  (dom/div :.container {:ref #(gobj/set this \"svgContainer\" %)}\n    (if (fp/get-state this ::error-catch?)\n      (dom/div \"Error rendering trace, check console for details\")\n      (dom/svg {:ref #(gobj/set this \"svg\" %)}))))\n\n(def d3-trace (fp/factory D3Trace))\n"]}