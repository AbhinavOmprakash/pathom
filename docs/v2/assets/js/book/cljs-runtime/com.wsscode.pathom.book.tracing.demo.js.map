{"version":3,"sources":["com/wsscode/pathom/book/tracing/demo.cljs"],"mappings":"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","names":["com.wsscode.pathom.connect/resolver","com.wsscode.pathom.book.tracing.demo/slow-root","env","_","c__39084__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__39085__auto__","switch__38786__auto__","state_53888","state_val_53889","inst_53866","inst_53871","inst_53875","inst_53876","cljs.core/PersistentHashMap","statearr-53896","statearr-53899","cljs.core.async.impl.ioc-helpers/process-exception","statearr-53912","cljs.core.async.impl.ioc-helpers/add-exception-frame","inst_53834","cljs.core.get.cljs$core$IFn$_invoke$arity$2","statearr-53918","statearr-53919","inst_53861","cljs.core.async.impl.ioc-helpers/take!","inst_53830","statearr-53926","inst_53879","cljs.core.async.impl.ioc-helpers/return-chan","inst_53863","inst_53864","com.wsscode.common.async-cljs/throw-err","statearr-53946","inst_53838","inst_53839","inst_53840","inst_53841","inst_53842","inst_53843","inst_53844","com.wsscode.pathom.trace.trace_enter.cljs$core$IFn$_invoke$arity$2","inst_53845","statearr-53960","inst_53847","inst_53848","inst_53850","inst_53854","inst_53855","inst_53856","inst_53857","inst_53858","inst_53859","com.wsscode.pathom.trace.trace_leave.cljs$core$IFn$_invoke$arity$3","statearr-53967","statearr-53968","statearr-53971","state-machine__38787__auto__","ret-value__38788__auto__","result__38789__auto__","cljs.core/keyword-identical?","e53976","js/Object","ex__38790__auto__","statearr-53978","state__39086__auto__","statearr-53997","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.async/timeout","com.wsscode.pathom.book.tracing.demo/slow-root-dep","state_54035","state_val_54036","inst_54027","inst_54028","inst_54029","inst_54030","statearr-54044","statearr-54049","statearr-54050","inst_54005","statearr-54053","statearr-54055","inst_54021","inst_54001","statearr-54058","inst_54032","inst_54023","inst_54024","statearr-54061","inst_54008","inst_54009","inst_54010","inst_54011","inst_54012","statearr-54071","inst_54014","inst_54015","inst_54016","inst_54017","inst_54018","inst_54019","statearr-54074","statearr-54079","statearr-54090","e54091","statearr-54093","statearr-54098","com.wsscode.pathom.book.tracing.demo/error-root-dep","state_54147","state_val_54149","inst_54140","inst_54141","inst_54142","inst_54143","statearr-54160","statearr-54161","statearr-54164","inst_54109","statearr-54167","statearr-54171","inst_54134","inst_54105","statearr-54177","inst_54145","inst_54136","inst_54137","statearr-54180","inst_54114","inst_54115","inst_54116","inst_54117","inst_54118","inst_54119","inst_54120","inst_54122","statearr-54187","inst_54124","inst_54125","inst_54126","inst_54127","inst_54128","inst_54129","inst_54130","inst_54131","inst_54132","statearr-54191","statearr-54193","statearr-54196","e54197","statearr-54198","statearr-54203","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","com.wsscode.pathom.book.tracing.demo/app-registry","com.wsscode.pathom.trace/trace-tree-collect","x","row","com.wsscode.pathom.trace/tree-assoc-detail","com.wsscode.pathom.book.tracing.demo/parser","com.wsscode.pathom.core/parallel-parser","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/parallel-reader","com.wsscode.pathom.connect/open-ident-reader","com.wsscode.pathom.core/env-placeholder-reader","com.wsscode.pathom.connect/mutate-async","com.wsscode.pathom.connect.connect_plugin.cljs$core$IFn$_invoke$arity$1","com.wsscode.pathom.core/error-handler-plugin","com.wsscode.pathom.core/trace-plugin","G__54212","G__54213"],"sourcesContent":["(ns com.wsscode.pathom.book.tracing.demo\n  (:require [com.wsscode.pathom.core :as p]\n            [com.wsscode.pathom.connect :as pc]\n            [com.wsscode.pathom.trace :as pt]\n            [clojure.core.async :as async]\n            [com.wsscode.common.async-cljs :refer [go-catch <?]]))\n\n(pc/defresolver slow-root [env _]\n  {::pc/output [::slow-root]}\n  (go-catch\n    ; here we use the tracing macro to compute the time for the timeout\n    (pt/tracing env {::pt/event ::my-event\n                     ::pt/style {:fill \"rgba(255, 255, 0, 0.5)\"}}\n      (<? (async/timeout 200)))\n    {::slow-root \"foo\"}))\n\n(pc/defresolver slow-root-dep [env _]\n  {::pc/input #{::slow-root}\n   ::pc/output [::root-dep]}\n  (go-catch\n    (pt/tracing env {::pt/event ::my-event}\n      (<? (async/timeout 200)))\n    {::root-dep \"nah\"}))\n\n(pc/defresolver error-root-dep [env _]\n  {::pc/input #{::slow-root}\n   ::pc/output [::root-dep-err]}\n  (go-catch\n    (pt/tracing env {::pt/event ::my-event\n                     ::pt/style {:fill \"rgba(255, 0, 0, 0.5)\"}\n                     ::data     \"Error message\"}\n      (<? (async/timeout 200)))\n    (throw (ex-info \"Meh\" {}))))\n\n(def app-registry [slow-root slow-root-dep error-root-dep])\n\n; to display the tracing with the results you must register the event type\n(defmethod pt/trace-tree-collect ::my-event [x row]\n  (-> row\n      ; the sequence at the end is a list with the keys to display in the trace when\n      ; user mouses over the event\n      (pt/tree-assoc-detail x [::data])))\n\n(def parser\n  (p/parallel-parser\n    {::p/env     {::p/reader               [p/map-reader\n                                            pc/parallel-reader\n                                            pc/open-ident-reader\n                                            p/env-placeholder-reader]\n                  ::p/placeholder-prefixes #{\">\"}}\n     ::p/mutate  pc/mutate-async\n     ::p/plugins [(pc/connect-plugin {::pc/register app-registry})\n                  p/error-handler-plugin\n                  p/trace-plugin]}))\n\n; to get raw tracing results, include the :com.wsscode.pathom/trace key in your query\n(parser {} [:a :b\n            :com.wsscode.pathom/trace])\n\n;=>\n;{:com.wsscode.pathom/trace\n; {:start 0,\n;  :path [],\n;  :duration 5049,\n;  :details [{:event \"process-pending\",\n;             :duration 0,\n;             :start 1,\n;             :provides #{:com.wsscode.pathom/trace},\n;             :merge-result? false}\n;            {:event \"flush-watchers-loop\", :duration 0, :start 1}\n;            {:event \"reset-loop\",\n;             :duration 0,\n;             :start 1,\n;             :loop-keys [:com.wsscode.pathom/trace]}\n; ...\n\n\n"]}