{"version":3,"sources":["com/wsscode/pathom/viz/ui/context.cljs"],"mappings":"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","names":["com.wsscode.pathom.viz.ui.context/contains-js-keys","obj","keys","p1__85870#","cljs.core/every?","goog.object/containsKey","cljs.spec.alpha/def-impl","p1__85876#","cljs.spec.alpha/with-gen","cljs.spec.gen.alpha.return$","com.wsscode.pathom.viz.ui.context/new-context","cljs.core/any?","var_args","G__85884","com.wsscode.pathom.viz.ui.context/child-as-fn","js/Error","Component","render","fulcro.client.primitives/create-element","v","cljs.core.apply","props","cljs.core.merge","cljs.core/clj->js","G__85892","js/module$node_modules$react$index","initial-value","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","com.wsscode.pathom.viz.ui.context/provider","p__85904","map__85905","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get","seq85897","G__85898","cljs.core/first","cljs.core/next","self__4717__auto__","context","value","children","goog.object/get","p__85910","map__85911","com.wsscode.pathom.viz.ui.context/consumer","render-fn","com.wsscode.pathom.viz.ui.context.child_as_fn"],"sourcesContent":["(ns com.wsscode.pathom.viz.ui.context\n  (:require\n    [\"react\" :as react]\n    [cljs.spec.alpha :as s]\n    [clojure.spec.gen.alpha :as gen]\n    [fulcro.client.primitives :as fp]\n    [goog.object :as gobj]))\n\n(declare new-context)\n\n(defn contains-js-keys [obj keys]\n  (every? #(gobj/containsKey obj %) keys))\n\n(s/def ::context\n  (s/with-gen #(contains-js-keys % [\"Consumer\" \"Provider\"]) #(gen/return (new-context))))\n\n(s/def ::value any?)\n\n(defn child-as-fn\n  \"Provides interop with a React component that takes a render function as its\n   child.\n   If you pass props in, it applies the equivalent of the #js reader to them.\n   You must convert any nested data structures to a JS obj if desired.\"\n  ([Component render]\n   (fp/create-element\n     Component\n     #js {:children\n          (fn [& v]\n            (apply render v))}\n     []))\n  ([Component props render]\n   (fp/create-element\n     Component\n     (-> {:children\n          (fn [& v]\n            (apply render v))}\n         (merge props)\n         clj->js)\n     [])))\n\n(defn new-context\n  \"Creates a new React context\"\n  ([] (.createContext react))\n  ([initial-value] (.createContext react initial-value)))\n\n(defn provider\n  \"A component that serves as a provider for the provided context.\n   (def my-context (create))\n   (defn parent-component []\n     (provider {:context my-context :value  \\\"initial state\\\"}\n       (dom/div \\\"children\\\")))\"\n  [{::keys [context value]} & children]\n  (fp/create-element\n    (gobj/get context \"Provider\")\n    #js {:value value}\n    children))\n\n(defn consumer\n  \"A component that serves as a consumer for the provided context.\n   Takes a render function as it's second parameter that will be called with\n   the context value, and should return hiccup syntax.\n   (def my-context (create))\n   (defn my-component []\n    (consumer {:context my-context}\n     (fn [context-state]\n      (dom/div \\\"The state is: \\\" context-state))))\"\n  [{::keys [context]} render-fn]\n  (child-as-fn\n    (gobj/get context \"Consumer\")\n    render-fn))\n"]}