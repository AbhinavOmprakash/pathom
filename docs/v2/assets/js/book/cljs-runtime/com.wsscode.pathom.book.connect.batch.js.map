{"version":3,"sources":["com/wsscode/pathom/book/connect/batch.cljs"],"mappings":";;;;;;AAMA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgBC,AAAaC,AAAEA;AAA/B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAMA,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAgBM,AAAeP;AAA/B,AAAA,AAAAE,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAyCM;AAAzC,AAGE,AAAAC,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA;AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAC,AAAA,AAAA,AACawB;AADb1B,AAAAA;AAAA,AAAA,AAAAG,AAAAH,AAAA,AAAAE;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAAG,AAAA,AAAAJ,AAAA;AAAAK,AAAA,AAAA;AAAAC,AAAA,AAAA,AAEsBZ;AAFtBa,AAAA,AAAAD;AAAAE,AAAA,AAAAC,AAAAJ,AAAAE;AAAAP,AAAA,AAAAU,AAAAV;AAAA,AAAA,AAAAU,AAAA,AAAAN;;AAAAM;;AAAA,AAAA,AAAAC,AAAAX,AAAAQ;;AAAA;;;;;AAAA,AAAA;;;;AAAA,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC;;AAAA,AAAAD,AAAA,AAAA;;AAAAA;;AAAAZ;;AAAA,AAAA,AAAAc,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAhB,AAAAC;AAAA,AAAA,AAAA,AAAAgB,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAA,AAAAE,AAAAC;AAAA,AAAAC,AAAAF;AAAA,AAAA,AAAAG,AAAApB;AAAA,AAAA,AAAAoB,AAAA,AAAAD;;AAAAC;AAAA,AAAAC,AAAArB;;AAAA;;AAAA,AAAA,AAAAiB;;;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAd;;;;AAAAc;;;;;AAAAd;;;;;AAAAA;;;;;;;;;;AAAAsB,AAAA,AAAAC,AAAA,AAAAzB,AAAAA,AAAAA;AAAA,AAAA,AAAAyB,AAAAC,AAAA,AAAA7B;;AAAA4B;;AAAA,AAAA,AAAAE,AAAAH;;;;AAAA3B;;AAIF,AAAA,AAAKgC,AAAc1C,AAAYQ;AAE/B,AAAKmC,AACH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAC2BC,AACAC,AACAC,AACbC,AACC,AAAA,AAAA,AAACC,AAAiCP,AAClCQ,AACAC","names":["com.wsscode.pathom.connect/resolver","com.wsscode.pathom.book.connect.batch/list-things","_","p__53694","map__53696","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","com.wsscode.pathom.book.connect.batch/slow-resolver","number","c__39003__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__39004__auto__","switch__38929__auto__","state_53738","state_val_53739","inst_53715","cljs.core.async.impl.ioc-helpers/take!","inst_53717","inst_53725","inst_53732","inst_53733","inst_53734","cljs.core/PersistentHashMap","statearr-53748","cljs.core.async.impl.ioc-helpers/return-chan","statearr-53762","state-machine__38930__auto__","ret-value__38931__auto__","result__38932__auto__","cljs.core/keyword-identical?","e53783","js/Object","ex__38933__auto__","statearr-53792","cljs.core.async.impl.ioc-helpers/process-exception","state__39005__auto__","statearr-53797","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.async/timeout","com.wsscode.pathom.book.connect.batch/app-registry","com.wsscode.pathom.book.connect.batch/parser","com.wsscode.pathom.core/async-parser","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/async-reader2","com.wsscode.pathom.connect/open-ident-reader","com.wsscode.pathom.connect/mutate-async","com.wsscode.pathom.connect.connect_plugin.cljs$core$IFn$_invoke$arity$1","com.wsscode.pathom.core/error-handler-plugin","com.wsscode.pathom.core/trace-plugin"],"sourcesContent":["(ns com.wsscode.pathom.book.connect.batch\n  (:require [com.wsscode.pathom.core :as p]\n            [com.wsscode.pathom.connect :as pc]\n            [cljs.core.async :as async :refer [go]]\n            [com.wsscode.pathom.profile :as pp]))\n\n(pc/defresolver list-things [_ _]\n  {::pc/output [{:items [:number]}]}\n  {:items [{:number 3}\n           {:number 10}\n           {:number 18}]})\n\n(pc/defresolver slow-resolver [_ {:keys [number]}]\n  {::pc/input  #{:number}\n   ::pc/output [:number-added]}\n  (go\n    (async/<! (async/timeout 1000))\n    {:number-added (inc number)}))\n\n(def app-registry [list-things slow-resolver])\n\n(def parser\n  (p/async-parser\n    {::p/env     {::p/reader [p/map-reader\n                              pc/async-reader2\n                              pc/open-ident-reader]}\n     ::p/mutate  pc/mutate-async\n     ::p/plugins [(pc/connect-plugin {::pc/register app-registry})\n                  p/error-handler-plugin\n                  p/trace-plugin]}))\n"]}