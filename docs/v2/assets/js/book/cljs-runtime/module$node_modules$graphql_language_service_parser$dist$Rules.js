shadow$provide.module$node_modules$graphql_language_service_parser$dist$Rules=function(global,require,module,exports){function word(value){return{style:"keyword",match:function(token){return"Name"===token.kind&&token.value===value}}}function name(style){return{style:style,match:function(token){return"Name"===token.kind},update:function(state,token){state.name=token.value}}}Object.defineProperty(exports,"__esModule",{value:!0});exports.ParseRules=exports.LexRules=exports.isIgnored=void 0;global=require("module$node_modules$graphql_language_service_parser$dist$RuleHelpers");
exports.isIgnored=function(ch){return" "===ch||"\t"===ch||","===ch||"\n"===ch||"\r"===ch||"ï»¿"===ch};exports.LexRules={Name:/^[_A-Za-z][_0-9A-Za-z]*/,Punctuation:/^(?:!|\$|\(|\)|\.\.\.|:|=|@|\[|]|\{|\||\})/,Number:/^-?(?:0|(?:[1-9][0-9]*))(?:\.[0-9]*)?(?:[eE][+-]?[0-9]+)?/,String:/^"(?:[^"\\]|\\(?:"|\/|\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*"?/,Comment:/^#.*/};exports.ParseRules={Document:[(0,global.list)("Definition")],Definition:function(token){switch(token.value){case "{":return"ShortQuery";case "query":return"Query";
case "mutation":return"Mutation";case "subscription":return"Subscription";case "fragment":return"FragmentDefinition";case "schema":return"SchemaDef";case "scalar":return"ScalarDef";case "type":return"ObjectTypeDef";case "interface":return"InterfaceDef";case "union":return"UnionDef";case "enum":return"EnumDef";case "input":return"InputDef";case "extend":return"ExtendDef";case "directive":return"DirectiveDef"}},ShortQuery:["SelectionSet"],Query:[word("query"),(0,global.opt)(name("def")),(0,global.opt)("VariableDefinitions"),
(0,global.list)("Directive"),"SelectionSet"],Mutation:[word("mutation"),(0,global.opt)(name("def")),(0,global.opt)("VariableDefinitions"),(0,global.list)("Directive"),"SelectionSet"],Subscription:[word("subscription"),(0,global.opt)(name("def")),(0,global.opt)("VariableDefinitions"),(0,global.list)("Directive"),"SelectionSet"],VariableDefinitions:[(0,global.p)("("),(0,global.list)("VariableDefinition"),(0,global.p)(")")],VariableDefinition:["Variable",(0,global.p)(":"),"Type",(0,global.opt)("DefaultValue")],
Variable:[(0,global.p)("$","variable"),name("variable")],DefaultValue:[(0,global.p)("\x3d"),"Value"],SelectionSet:[(0,global.p)("{"),(0,global.list)("Selection"),(0,global.p)("}")],Selection:function(token,stream){return"..."===token.value?stream.match(/[\s\u00a0,]*(on\b|@|{)/,!1)?"InlineFragment":"FragmentSpread":stream.match(/[\s\u00a0,]*:/,!1)?"AliasedField":"Field"},AliasedField:[name("property"),(0,global.p)(":"),name("qualifier"),(0,global.opt)("Arguments"),(0,global.list)("Directive"),(0,global.opt)("SelectionSet")],
Field:[name("property"),(0,global.opt)("Arguments"),(0,global.list)("Directive"),(0,global.opt)("SelectionSet")],Arguments:[(0,global.p)("("),(0,global.list)("Argument"),(0,global.p)(")")],Argument:[name("attribute"),(0,global.p)(":"),"Value"],FragmentSpread:[(0,global.p)("..."),name("def"),(0,global.list)("Directive")],InlineFragment:[(0,global.p)("..."),(0,global.opt)("TypeCondition"),(0,global.list)("Directive"),"SelectionSet"],FragmentDefinition:[word("fragment"),(0,global.opt)((0,global.butNot)(name("def"),
[word("on")])),"TypeCondition",(0,global.list)("Directive"),"SelectionSet"],TypeCondition:[word("on"),"NamedType"],Value:function(token){switch(token.kind){case "Number":return"NumberValue";case "String":return"StringValue";case "Punctuation":switch(token.value){case "[":return"ListValue";case "{":return"ObjectValue";case "$":return"Variable"}return null;case "Name":switch(token.value){case "true":case "false":return"BooleanValue"}return"null"===token.value?"NullValue":"EnumValue"}},NumberValue:[(0,
global.t)("Number","number")],StringValue:[(0,global.t)("String","string")],BooleanValue:[(0,global.t)("Name","builtin")],NullValue:[(0,global.t)("Name","keyword")],EnumValue:[name("string-2")],ListValue:[(0,global.p)("["),(0,global.list)("Value"),(0,global.p)("]")],ObjectValue:[(0,global.p)("{"),(0,global.list)("ObjectField"),(0,global.p)("}")],ObjectField:[name("attribute"),(0,global.p)(":"),"Value"],Type:function(token){return"["===token.value?"ListType":"NonNullType"},ListType:[(0,global.p)("["),
"Type",(0,global.p)("]"),(0,global.opt)((0,global.p)("!"))],NonNullType:["NamedType",(0,global.opt)((0,global.p)("!"))],NamedType:[function(style){return{style:style,match:function(token){return"Name"===token.kind},update:function(state,token){state.prevState&&state.prevState.prevState&&(state.name=token.value,state.prevState.prevState.type=token.value)}}}("atom")],Directive:[(0,global.p)("@","meta"),name("meta"),(0,global.opt)("Arguments")],SchemaDef:[word("schema"),(0,global.list)("Directive"),
(0,global.p)("{"),(0,global.list)("OperationTypeDef"),(0,global.p)("}")],OperationTypeDef:[name("keyword"),(0,global.p)(":"),name("atom")],ScalarDef:[word("scalar"),name("atom"),(0,global.list)("Directive")],ObjectTypeDef:[word("type"),name("atom"),(0,global.opt)("Implements"),(0,global.list)("Directive"),(0,global.p)("{"),(0,global.list)("FieldDef"),(0,global.p)("}")],Implements:[word("implements"),(0,global.list)("NamedType")],FieldDef:[name("property"),(0,global.opt)("ArgumentsDef"),(0,global.p)(":"),
"Type",(0,global.list)("Directive")],ArgumentsDef:[(0,global.p)("("),(0,global.list)("InputValueDef"),(0,global.p)(")")],InputValueDef:[name("attribute"),(0,global.p)(":"),"Type",(0,global.opt)("DefaultValue"),(0,global.list)("Directive")],InterfaceDef:[word("interface"),name("atom"),(0,global.list)("Directive"),(0,global.p)("{"),(0,global.list)("FieldDef"),(0,global.p)("}")],UnionDef:[word("union"),name("atom"),(0,global.list)("Directive"),(0,global.p)("\x3d"),(0,global.list)("UnionMember",(0,global.p)("|"))],
UnionMember:["NamedType"],EnumDef:[word("enum"),name("atom"),(0,global.list)("Directive"),(0,global.p)("{"),(0,global.list)("EnumValueDef"),(0,global.p)("}")],EnumValueDef:[name("string-2"),(0,global.list)("Directive")],InputDef:[word("input"),name("atom"),(0,global.list)("Directive"),(0,global.p)("{"),(0,global.list)("InputValueDef"),(0,global.p)("}")],ExtendDef:[word("extend"),"ObjectTypeDef"],DirectiveDef:[word("directive"),(0,global.p)("@","meta"),name("meta"),(0,global.opt)("ArgumentsDef"),word("on"),
(0,global.list)("DirectiveLocation",(0,global.p)("|"))],DirectiveLocation:[name("string-2")]}}
//# sourceMappingURL=module$node_modules$graphql_language_service_parser$dist$Rules.js.map
