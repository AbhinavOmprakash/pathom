{"version":3,"sources":["com/wsscode/pathom/book/core/parser_counter_nested_example.cljs"],"mappings":";;;;AAKA,AAAA,AAAAA,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AACsBO;AADtB,AAAAH,AAAAJ,AAAA,AACWM;AADX,AAEE,AAAIA;AACF,AAACE,AAAOD;;AADV;;;AAIF,AAAKE,AACH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAACC,AAA+BN;AAAhC,AACiC,AAACO,AAAM,AAAA,AAAAF,AAAcG;;AAGxD,AAAA,AAAMC,AAAQP,AAAIQ;AAAlB,AACE,AAAAC,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA;AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAC,AAAA,AAAA,AACsCmB;AADtClB,AAAA,AAAA,AAAAD,AACiBkB,AAAMlC;AADvBkB,AAAA,AAAAD,AACGf,AAA4CM;AAD/CM,AAAAA;AAAA,AAAA,AAAAK,AAAAL,AAAAI;;AAAA;;;;AAAA,AAAA;;;;AAAA,AAAA,AAAAE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC;;AAAA,AAAAD,AAAA,AAAA;;AAAAA;;AAAAN;;AAAA,AAAA,AAAAQ,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAV,AAAAC;AAAA,AAAA,AAAA,AAAAU,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAA,AAAAE,AAAAC;AAAA,AAAAC,AAAAF;AAAA,AAAA,AAAAG,AAAAd;AAAA,AAAA,AAAAc,AAAA,AAAAD;;AAAAC;AAAA,AAAAC,AAAAf;;AAAA;;AAAA,AAAA,AAAAW;;;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAR;;;;AAAAQ;;;;;AAAAR;;;;;AAAAA;;;;;;;;;;AAAAgB,AAAA,AAAAC,AAAA,AAAAnB;AAAA,AAAA,AAAAmB,AAAAC,AAAA,AAAAvB;;AAAAsB;;AAAA,AAAA,AAAAE,AAAAH;;;;AAAArB","names":["p__73348","map__73349","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","com.wsscode.pathom.book.core.parser-counter-nested-example/join-walk-reader","query","env","com.wsscode.pathom.core.join","com.wsscode.pathom.book.core.parser-counter-nested-example/count-parser","p1__73360#","com.wsscode.pathom.core/parser","cljs.core.swap_BANG_","cljs.core/inc","com.wsscode.pathom.book.core.parser-counter-nested-example/parser","tx","c__45808__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__45809__auto__","switch__45525__auto__","state_73369","state_val_73370","inst_73365","inst_73366","inst_73367","cljs.core.async.impl.ioc-helpers/return-chan","statearr-73377","state-machine__45526__auto__","ret-value__45527__auto__","result__45528__auto__","cljs.core/keyword-identical?","e73379","js/Object","ex__45529__auto__","statearr-73387","cljs.core.async.impl.ioc-helpers/process-exception","state__45810__auto__","statearr-73394","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.assoc","cljs.core.atom"],"sourcesContent":["(ns com.wsscode.pathom.book.core.parser-counter-nested-example\n  (:require [com.wsscode.pathom.core :as p]\n            [cljs.core.async :refer [go]]))\n\n; tag::parser[]\n(defn join-walk-reader\n  [{:keys [query] :as env}]\n  (if query\n    (p/join env)\n    ::p/continue))\n\n(def count-parser\n  (p/parser {::p/env {::p/reader [join-walk-reader\n                                  #(swap! (::counter %) inc)]}}))\n; end::parser[]\n\n(defn parser [env tx]\n  (go\n    (count-parser (assoc env ::counter (atom 0)) tx)))\n"]}