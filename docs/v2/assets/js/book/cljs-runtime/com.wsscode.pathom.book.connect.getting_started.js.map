{"version":3,"sources":["com/wsscode/pathom/book/connect/getting_started.cljs"],"mappings":";;;;;AAMA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgBC,AAAgBC,AAAEA;AAAlC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAMA,AAAKC,AACH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AACyCC,AACAC,AACAC,AACAC,AAE3BC,AACC,AAAA,AAAA,AAACC,AAAiCT,AAClCU,AACAC;AAElB","names":["com.wsscode.pathom.connect/resolver","com.wsscode.pathom.book.connect.getting-started/latest-product","_","com.wsscode.pathom.book.connect.getting-started/parser","com.wsscode.pathom.core/parallel-parser","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/parallel-reader","com.wsscode.pathom.connect/open-ident-reader","com.wsscode.pathom.core/env-placeholder-reader","com.wsscode.pathom.connect/mutate-async","com.wsscode.pathom.connect.connect_plugin.cljs$core$IFn$_invoke$arity$1","com.wsscode.pathom.core/error-handler-plugin","com.wsscode.pathom.core/trace-plugin"],"sourcesContent":["(ns com.wsscode.pathom.book.connect.getting-started\n  (:require [com.wsscode.pathom.core :as p]\n            [com.wsscode.pathom.connect :as pc]\n            [com.wsscode.pathom.profile :as pp]))\n\n; creating our first resolver\n(pc/defresolver latest-product [_ _]\n  {::pc/output [{::latest-product [:product/id :product/title :product/price]}]}\n  {::latest-product {:product/id    1\n                     :product/title \"Acoustic Guitar\"\n                     :product/price 199.99M}})\n\n(def parser\n  (p/parallel-parser\n    {::p/env     {::p/reader               [p/map-reader\n                                            pc/parallel-reader\n                                            pc/open-ident-reader\n                                            p/env-placeholder-reader]\n                  ::p/placeholder-prefixes #{\">\"}}\n     ::p/mutate  pc/mutate-async\n     ::p/plugins [(pc/connect-plugin {::pc/register latest-product})\n                  p/error-handler-plugin\n                  p/trace-plugin]}))\n\n(comment\n  (parser {} [::latest-product]))\n"]}