{"version":3,"sources":["com/wsscode/pathom/book/tracing/demo_parallel_reader.cljs"],"mappings":"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","names":["com.wsscode.pathom.connect/resolver","G__66152","p__66154","map__66155","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","com.wsscode.pathom.book.tracing.demo-parallel-reader/movie-details","env","id","c__48839__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__48840__auto__","switch__48139__auto__","state_66178","state_val_66179","statearr-66184","_","statearr-66186","cljs.core/cons","inst_66167","cljs.core.async.impl.ioc-helpers/take!","inst_66176","cljs.core.async.impl.ioc-helpers/return-chan","inst_66160","statearr-66194","statearr-66197","cljs.core/rest","ex66190","statearr-66202","statearr-66204","inst_66169","inst_66170","com.wsscode.common.async-cljs/throw-err","inst_66171","inst_66172","inst_66173","cljs.core/PersistentHashMap","statearr-66206","statearr-66207","statearr-66210","statearr-66212","state-machine__48140__auto__","ret-value__48141__auto__","result__48142__auto__","cljs.core/keyword-identical?","ex__48143__auto__","e66214","statearr-66216","cljs.core/seq","statearr-66219","cljs.core/first","state__48841__auto__","statearr-66230","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.async/timeout","G__66260","com.wsscode.pathom.book.tracing.demo-parallel-reader/movie-rating","input","state_66279","state_val_66280","statearr-66284","statearr-66287","inst_66268","inst_66277","inst_66262","statearr-66294","statearr-66297","ex66290","statearr-66298","statearr-66300","inst_66270","inst_66271","inst_66272","inst_66273","inst_66274","statearr-66305","statearr-66308","statearr-66310","statearr-66315","e66320","statearr-66321","statearr-66322","statearr-66327","G__66336","p__66338","map__66339","com.wsscode.pathom.book.tracing.demo-parallel-reader/movie-title-prefixed","title","state_66389","state_val_66391","statearr-66422","statearr-66424","inst_66363","inst_66380","inst_66350","statearr-66427","statearr-66434","ex66425","statearr-66438","statearr-66439","inst_66365","inst_66366","inst_66368","inst_66375","inst_66376","inst_66377","statearr-66441","statearr-66444","statearr-66445","statearr-66448","e66450","statearr-66452","statearr-66453","statearr-66459","com.wsscode.pathom.book.tracing.demo-parallel-reader/app-registry","com.wsscode.pathom.book.tracing.demo-parallel-reader/parser","com.wsscode.pathom.core/parallel-parser","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/parallel-reader","com.wsscode.pathom.connect/open-ident-reader","com.wsscode.pathom.core/env-placeholder-reader","com.wsscode.pathom.connect/mutate-async","com.wsscode.pathom.connect.connect_plugin","com.wsscode.pathom.core/error-handler-plugin","com.wsscode.pathom.core/trace-plugin"],"sourcesContent":["(ns com.wsscode.pathom.book.tracing.demo-parallel-reader\n  (:require [clojure.core.async :as async]\n            [com.wsscode.common.async-cljs :refer [go-catch <?]]\n            [com.wsscode.pathom.connect :as pc]\n            [com.wsscode.pathom.core :as p]))\n\n(pc/defresolver movie-details [env {:movie/keys [id]}]\n  {::pc/input  #{:movie/id}\n   ::pc/output [:movie/id :movie/title :movie/release-date]}\n  (go-catch\n    (<? (async/timeout 100))\n    {:movie/id           id\n     :movie/title        \"Title\"\n     :movie/release-date #inst \"2018-10-30\"}))\n\n(pc/defresolver movie-rating [env input]\n  {::pc/input  #{:movie/id}\n   ::pc/output [:movie/rating]}\n  (go-catch\n    (<? (async/timeout 100))\n    {:movie/rating \"PG\"}))\n\n(pc/defresolver movie-title-prefixed [env {:movie/keys [title]}]\n  {::pc/input  #{:movie/title}\n   ::pc/output [:movie/title-prefixed]}\n  (go-catch\n    (<? (async/timeout 100))\n    {:movie/title-prefixed (str \"Prefix \" title)}))\n\n(def app-registry [movie-details movie-rating movie-title-prefixed])\n\n(def parser\n  (p/parallel-parser\n    {::p/env     {::p/reader               [p/map-reader\n                                            pc/parallel-reader\n                                            pc/open-ident-reader\n                                            p/env-placeholder-reader]\n                  ::p/placeholder-prefixes #{\">\"}}\n     ::p/mutate  pc/mutate-async\n     ::p/plugins [(pc/connect-plugin {::pc/register app-registry})\n                  p/error-handler-plugin\n                  p/trace-plugin]}))\n"]}