{"version":3,"sources":["com/wsscode/pathom/book/tracing/demo_parallel_reader.cljs"],"mappings":"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","names":["com.wsscode.pathom.connect/resolver","p__53351","map__53352","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","com.wsscode.pathom.book.tracing.demo-parallel-reader/movie-details","env","id","c__38971__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__38972__auto__","switch__38924__auto__","state_53369","state_val_53370","statearr-53371","inst_53367","cljs.core.async.impl.ioc-helpers/return-chan","inst_53354","statearr-53395","cljs.core.async.impl.ioc-helpers/process-exception","_","cljs.core.async.impl.ioc-helpers/add-exception-frame","inst_53358","cljs.core.async.impl.ioc-helpers/take!","inst_53360","inst_53361","com.wsscode.common.async-cljs/throw-err","inst_53363","inst_53364","inst_53365","cljs.core/PersistentHashMap","statearr-53396","statearr-53397","statearr-53398","state-machine__38925__auto__","ret-value__38926__auto__","result__38927__auto__","cljs.core/keyword-identical?","e53399","js/Object","ex__38928__auto__","statearr-53400","state__38973__auto__","statearr-53401","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.async/timeout","com.wsscode.pathom.book.tracing.demo-parallel-reader/movie-rating","input","state_53426","state_val_53427","statearr-53431","inst_53424","inst_53412","statearr-53434","inst_53416","inst_53418","inst_53419","inst_53420","inst_53421","inst_53422","statearr-53436","statearr-53437","statearr-53438","e53440","statearr-53441","statearr-53445","p__53457","map__53459","com.wsscode.pathom.book.tracing.demo-parallel-reader/movie-title-prefixed","title","state_53490","state_val_53491","statearr-53495","inst_53488","inst_53474","statearr-53505","inst_53479","inst_53481","inst_53482","inst_53483","inst_53484","inst_53485","inst_53486","statearr-53542","statearr-53544","statearr-53546","e53547","statearr-53548","statearr-53551","com.wsscode.pathom.book.tracing.demo-parallel-reader/app-registry","com.wsscode.pathom.book.tracing.demo-parallel-reader/parser","com.wsscode.pathom.core/parallel-parser","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/parallel-reader","com.wsscode.pathom.connect/open-ident-reader","com.wsscode.pathom.core/env-placeholder-reader","com.wsscode.pathom.connect/mutate-async","com.wsscode.pathom.connect.connect_plugin.cljs$core$IFn$_invoke$arity$1","com.wsscode.pathom.core/error-handler-plugin","com.wsscode.pathom.core/trace-plugin"],"sourcesContent":["(ns com.wsscode.pathom.book.tracing.demo-parallel-reader\n  (:require [clojure.core.async :as async]\n            [com.wsscode.common.async-cljs :refer [go-catch <?]]\n            [com.wsscode.pathom.connect :as pc]\n            [com.wsscode.pathom.core :as p]))\n\n(pc/defresolver movie-details [env {:movie/keys [id]}]\n  {::pc/input  #{:movie/id}\n   ::pc/output [:movie/id :movie/title :movie/release-date]}\n  (go-catch\n    (<? (async/timeout 100))\n    {:movie/id           id\n     :movie/title        \"Title\"\n     :movie/release-date #inst \"2018-10-30\"}))\n\n(pc/defresolver movie-rating [env input]\n  {::pc/input  #{:movie/id}\n   ::pc/output [:movie/rating]}\n  (go-catch\n    (<? (async/timeout 100))\n    {:movie/rating \"PG\"}))\n\n(pc/defresolver movie-title-prefixed [env {:movie/keys [title]}]\n  {::pc/input  #{:movie/title}\n   ::pc/output [:movie/title-prefixed]}\n  (go-catch\n    (<? (async/timeout 100))\n    {:movie/title-prefixed (str \"Prefix \" title)}))\n\n(def app-registry [movie-details movie-rating movie-title-prefixed])\n\n(def parser\n  (p/parallel-parser\n    {::p/env     {::p/reader               [p/map-reader\n                                            pc/parallel-reader\n                                            pc/open-ident-reader\n                                            p/env-placeholder-reader]\n                  ::p/placeholder-prefixes #{\">\"}}\n     ::p/mutate  pc/mutate-async\n     ::p/plugins [(pc/connect-plugin {::pc/register app-registry})\n                  p/error-handler-plugin\n                  p/trace-plugin]}))\n"]}