{"version":3,"sources":["fulcro/tempid.cljc"],"mappings":";;AAOG,AAAA;;;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAASI;;AAAT,AAAA,AAAA,AAEaI;AAFb,AAGI,AAACC,AAAOD;;;AAHZ,AAAA,AAAA,AAAA,AAASJ,AAKEI,AAAKE;;AALhB,AAAA,AAAA,AAKWF;AALX,AAMI,AAAK,AAAWJ,AAAOM,AACrB,AAACC,AAAE,AAAGH,AAAU,AAAGE;;;AAPzB,AAAA,AAAA,AAAA,AAASN,AASCI;;AATV,AAAA,AAAA,AASUA;AATV,AAUI,AAAM,AAAA,AAAMD;AAAZ,AACE,AAAMA,AAAO,AAACK,AAAKN;;AADrB;;AAEAC;;;AAZJ,AAAA,AAAA,AAAA,AAASH,AAcMS,AAAEC,AAAOD;;AAdxB,AAAA,AAAA,AAceA;AAdf,AAeI,AAAA,AAAA,AAACE,AAAUD,AAA2BR;;;AAf1C,AAAA,AAAA,AAASF;AAAT,AAAA,AAAA;;;AAAA,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAAAJ,AAAAC,AAAAC,AAASE;AAAT,AAAA,AAAAD,AAAAF,AAAA;;;AAAA;;;AAAA,AAASI,AAAkBC,AAAaC;AAAxC,AAAA,AAAAH,AAA2BE,AAAaC;;;AAA/BH,AAkBT,AAAA,AAAA,AAAAY,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD;AAAN,AAEG,AAACE,AAAO,AAACC;;;AAFZ,AAAA,AAAA,AAAMH,AAGFZ;AAHJ,AAIG,AAAAF,AAAA,AAASE;;;AAJZ,AAAA,AAAA,AAAMY;;AAAN,AA0BH,AAAA,AAAMI,AAEHC;AAFH,AAGE,AAAWnB,AAAOmB","names":["this__4374__auto__","writer__4375__auto__","opt__4376__auto__","cljs.core/-write","fulcro.tempid/TempId","fulcro.tempid/->TempId","id","__hash","this","cljs.core.pr_str","other","cljs.core._EQ_","cljs.core/hash","_","writer","cljs.core.write_all","var_args","G__56685","fulcro.tempid/tempid","js/Error","fulcro.tempid.tempid","cljs.core/random-uuid","fulcro.tempid/tempid?","x"],"sourcesContent":["(ns fulcro.tempid\n  #?(:clj (:import [java.io Writer])))\n\n;; =============================================================================\n;; ClojureScript\n\n#?(:cljs\n   (deftype TempId [^:mutable id ^:mutable __hash]\n     Object\n     (toString [this]\n       (pr-str this))\n     IEquiv\n     (-equiv [this other]\n       (and (instance? TempId other)\n         (= (. this -id) (. other -id))))\n     IHash\n     (-hash [this]\n       (when (nil? __hash)\n         (set! __hash (hash id)))\n       __hash)\n     IPrintWithWriter\n     (-pr-writer [_ writer _]\n       (write-all writer \"#fulcro/tempid[\\\"\" id \"\\\"]\"))))\n\n#?(:cljs\n   (defn tempid\n     ([]\n      (tempid (random-uuid)))\n     ([id]\n      (TempId. id nil))))\n\n;; =============================================================================\n;; Clojure\n\n#?(:clj\n   (defrecord TempId [id]\n     Object\n     (toString [this]\n       (pr-str this))))\n\n#?(:clj\n   (defmethod print-method TempId [^TempId x ^Writer writer]\n     (.write writer (str \"#fulcro/tempid[\\\"\" (.id x) \"\\\"]\"))))\n\n#?(:clj\n   (defn tempid\n     ([]\n      (tempid (java.util.UUID/randomUUID)))\n     ([uuid]\n      (TempId. uuid))))\n\n(defn tempid?\n  #?(:cljs {:tag boolean})\n  [x]\n  (instance? TempId x))\n"]}