shadow$provide.module$node_modules$codemirror$addon$fold$brace_fold=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){CodeMirror.registerHelper("fold","brace",function(cm,start){function findOpening(openCh){for(var at=start.ch,pass=0;;)if(at=0>=at?-1:lineText.lastIndexOf(openCh,
at-1),-1==at){if(1==pass)break;pass=1;at=lineText.length}else{if(1==pass&&at<start.ch)break;tokenType=cm.getTokenTypeAt(CodeMirror.Pos(line,at+1));if(!/^(comment|string)/.test(tokenType))return at+1;--at}}var line=start.line,lineText=cm.getLine(line),tokenType,startToken="{",endToken="}",startCh=findOpening("{");null==startCh&&(startToken="[",endToken="]",startCh=findOpening("["));if(null!=startCh){var count=1,lastLine=cm.lastLine(),i=line;a:for(;i<=lastLine;++i)for(var text=cm.getLine(i),pos=i==
line?startCh:0;;){var nextOpen=text.indexOf(startToken,pos);pos=text.indexOf(endToken,pos);0>nextOpen&&(nextOpen=text.length);0>pos&&(pos=text.length);pos=Math.min(nextOpen,pos);if(pos==text.length)break;if(cm.getTokenTypeAt(CodeMirror.Pos(i,pos+1))==tokenType)if(pos==nextOpen)++count;else if(!--count){var end=i;var endCh=pos;break a}++pos}if(null!=end&&(line!=end||endCh!=startCh))return{from:CodeMirror.Pos(line,startCh),to:CodeMirror.Pos(end,endCh)}}});CodeMirror.registerHelper("fold","import",function(cm,
start$jscomp$0){function hasImport(line){if(line<cm.firstLine()||line>cm.lastLine())return null;var start=cm.getTokenAt(CodeMirror.Pos(line,1));/\S/.test(start.string)||(start=cm.getTokenAt(CodeMirror.Pos(line,start.end+1)));if("keyword"!=start.type||"import"!=start.string)return null;var i=line;for(line=Math.min(cm.lastLine(),line+10);i<=line;++i){var semi=cm.getLine(i).indexOf(";");if(-1!=semi)return{startCh:start.end,end:CodeMirror.Pos(i,semi)}}}start$jscomp$0=start$jscomp$0.line;var has=hasImport(start$jscomp$0),
prev;if(!has||hasImport(start$jscomp$0-1)||(prev=hasImport(start$jscomp$0-2))&&prev.end.line==start$jscomp$0-1)return null;for(prev=has.end;;){var next=hasImport(prev.line+1);if(null==next)break;prev=next.end}return{from:cm.clipPos(CodeMirror.Pos(start$jscomp$0,has.startCh+1)),to:prev}});CodeMirror.registerHelper("fold","include",function(cm,start$jscomp$0){function hasInclude(line){if(line<cm.firstLine()||line>cm.lastLine())return null;var start=cm.getTokenAt(CodeMirror.Pos(line,1));/\S/.test(start.string)||
(start=cm.getTokenAt(CodeMirror.Pos(line,start.end+1)));if("meta"==start.type&&"#include"==start.string.slice(0,8))return start.start+8}start$jscomp$0=start$jscomp$0.line;var has=hasInclude(start$jscomp$0);if(null==has||null!=hasInclude(start$jscomp$0-1))return null;for(var end=start$jscomp$0;null!=hasInclude(end+1);)++end;return{from:CodeMirror.Pos(start$jscomp$0,has+1),to:cm.clipPos(CodeMirror.Pos(end))}})})}
//# sourceMappingURL=module$node_modules$codemirror$addon$fold$brace_fold.js.map
