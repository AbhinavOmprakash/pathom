{"version":3,"sources":["fulcro/client/impl/protocols.cljc"],"mappings":"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","names":["x__4433__auto__","m__4434__auto__","fulcro.client.impl.protocols/indexes","goog/typeOf","m__4431__auto__","cljs.core/missing-protocol","fulcro.client.impl.protocols/index-root","fulcro.client.impl.protocols/index-component!","fulcro.client.impl.protocols/drop-component!","fulcro.client.impl.protocols/ref-for","fulcro.client.impl.protocols/key->components","fulcro.client.impl.protocols/IIndexer","this","x","component","k","fulcro.client.impl.protocols/tick!","fulcro.client.impl.protocols/get-id","fulcro.client.impl.protocols/get-history","fulcro.client.impl.protocols/get-network-activity","fulcro.client.impl.protocols/basis-t","fulcro.client.impl.protocols/add-root!","fulcro.client.impl.protocols/remove-root!","fulcro.client.impl.protocols/schedule-render!","fulcro.client.impl.protocols/schedule-sends!","var_args","G__57053","fulcro.client.impl.protocols/queue!","js/Error","fulcro.client.impl.protocols/queue-sends!","fulcro.client.impl.protocols/reindex!","G__57093","fulcro.client.impl.protocols/reconcile!","fulcro.client.impl.protocols/send!","fulcro.client.impl.protocols/IReconciler","reconciler","root-class","target","options","ks","remote","sends","fulcro.client.impl.protocols/tx-intercept","fulcro.client.impl.protocols/ITxIntercept","c","tx"],"sourcesContent":["(ns fulcro.client.impl.protocols)\n\n(defprotocol IIndexer\n  (indexes [this] \"Get the indexes out of the indexer\")\n  (index-root [this x] \"Index the entire root query\")\n  (index-component! [this component] \"Add the given active UI component to the index\")\n  (drop-component! [this component] \"Drop the given UI component from the index\")\n  (ref-for [this component] \"Get the ident for the given component (UNIMPLEMENTED AT PRESENT)\")\n  (key->components [this k] \"Find all components that query for the given keyword or ident.\"))\n\n(defprotocol IReconciler\n  (tick! [this] \"Cause the current basis time to advance\")\n  (get-id [this] \"Get the unique ID of this reconciler. Used to resolve multiple running apps on a page. Defaults to the root class and a UUID.\")\n  (get-history [this] \"Returns the current history atom\")\n  (get-network-activity [this] \"Returns an atom containing network activity info.\")\n  (basis-t [this])\n  (add-root! [reconciler root-class target options])\n  (remove-root! [reconciler target])\n  (schedule-render! [reconciler] \"Schedule a render if one is not already scheduled.\")\n  (schedule-sends! [reconciler] \"Schedule a network interaction.\")\n  (queue! [reconciler ks] [reconciler ks remote] \"Add the given ks to the given remote queue of things to be re-rendered. If remote is nil, add to the local UI queue\")\n  (queue-sends! [reconciler sends] \"Add the given map of remote->query sends to the queue of things to be sent\")\n  (reindex! [reconciler] \"Reindex the active UI\")\n  (reconcile! [reconciler] [reconciler remote] \"Bring the UI up-to-date with respect to data changes in the given queue. If remote is nil, use local UI queue.\")\n  (send! [reconciler] \"Send the actual queued network traffic to remotes\"))\n\n#?(:clj\n   (defprotocol IReactDOMElement\n     (^String -render-to-string [this react-id ^StringBuilder sb] \"renders a DOM node to string.\")))\n\n#?(:clj\n   (defprotocol IReactComponent\n     (-render [this] \"must return a valid ReactDOMElement.\")))\n\n#?(:clj\n   (defprotocol IReactLifecycle\n     (shouldComponentUpdate [this next-props next-state])\n     (initLocalState [this])\n     (componentWillReceiveProps [this next-props])\n     (componentWillUpdate [this next-props next-state])\n     (componentDidUpdate [this prev-props prev-state])\n     (componentWillMount [this])\n     (componentDidMount [this])\n     (componentWillUnmount [this])\n     (getSnapshotBeforeUpdate [this pp ps])\n     (componentDidCatch [this err info])\n     (UNSAFE_componentWillMount [this])\n     (UNSAFE_componentWillReceiveProps [this next-props])\n     (UNSAFE_componentWillUpdate [this next-props next-state])\n     (render [this])))\n\n(defprotocol ITxIntercept\n  (tx-intercept [c tx]\n    \"An optional protocol that component may implement to intercept child\n     transactions.\"))\n\n"]}