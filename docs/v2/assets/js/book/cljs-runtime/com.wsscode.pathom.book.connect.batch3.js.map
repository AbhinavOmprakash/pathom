{"version":3,"sources":["com/wsscode/pathom/book/connect/batch3.cljs"],"mappings":";;;;;AAKA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgBC;AAAhB,AAAA,AAAAD;;AAAA,AAA6BE,AAAEA;AAA/B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAMA,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgBC,AAKEE;AALlB,AAAA,AAAAH;;AAAA,AAA+BD,AAAEG;AAAjC,AAME,AAAAE,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA;AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAC,AAAA,AAAA,AACaqB;AADbvB,AAAAA;AAAA,AAAA,AAAAG,AAAAH,AAAA,AAAAE;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAAG,AAAA,AAAAJ,AAAA;AAAAK,AAAA,AAAA,AAGQ;AAAKoB;AAAL,AAAA,AAAA,AAAuB,AAAA,AAAK,AAAA,AAASA;;;;AAH7CnB,AAAA,AAAAD,AAGGmB,AAAgD/B;AAHnDO,AAAA,AAAAO,AAAAP;AAAA,AAAA,AAAAO,AAAA,AAAAH;;AAAAG;;AAAA,AAAA,AAAAC,AAAAR,AAAAM;;AAAA;;;;;AAAA,AAAA;;;;AAAA,AAAA,AAAAG,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC;;AAAA,AAAAD,AAAA,AAAA;;AAAAA;;AAAAT;;AAAA,AAAA,AAAAW,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAb,AAAAC;AAAA,AAAA,AAAA,AAAAa,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAA,AAAAE,AAAAC;AAAA,AAAAC,AAAAF;AAAA,AAAA,AAAAG,AAAAjB;AAAA,AAAA,AAAAiB,AAAA,AAAAD;;AAAAC;AAAA,AAAAC,AAAAlB;;AAAA;;AAAA,AAAA,AAAAc;;;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAX;;;;AAAAW;;;;;AAAAX;;;;;AAAAA;;;;;;;;;;AAAAmB,AAAA,AAAAC,AAAA,AAAAtB;AAAA,AAAA,AAAAsB,AAAAC,AAAA,AAAA1B;;AAAAyB;;AAAA,AAAA,AAAAE,AAAAH;;;;AAAAxB;;AAKF,AAAA,AAAK+B,AAAcrC,AAAYG;AAE/B,AAAKmC,AACH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AACkCC,AACAC,AACAC,AACD,AAAKC,AAAIC;AAAT,AACE,AAAA,AAACC,AAAyBD;;AAC1B,AAACE,AAAYF;AANjD,AAAA,AAAA,AAOeG,AACC,AAAA,AAAA,AAACC,AAAiCX,AAClCY,AACAC","names":["com.wsscode.pathom.connect/resolver","G__72837","com.wsscode.pathom.book.connect.batch3/list-things","_","G__72847","com.wsscode.pathom.book.connect.batch3/slow-resolver","input","com.wsscode.pathom.connect/transform-batch-resolver","c__45808__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__45809__auto__","switch__45525__auto__","state_72904","state_val_72907","inst_72883","cljs.core.async.impl.ioc-helpers/take!","inst_72887","inst_72899","inst_72901","statearr-72945","cljs.core.async.impl.ioc-helpers/return-chan","statearr-72960","state-machine__45526__auto__","ret-value__45527__auto__","result__45528__auto__","cljs.core/keyword-identical?","e72973","js/Object","ex__45529__auto__","statearr-72977","cljs.core.async.impl.ioc-helpers/process-exception","state__45810__auto__","statearr-72984","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.async/timeout","cljs.core.mapv","v","com.wsscode.pathom.book.connect.batch3/app-registry","com.wsscode.pathom.book.connect.batch3/parser","com.wsscode.pathom.core/async-parser","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/async-reader2","com.wsscode.pathom.connect/open-ident-reader","env","error","js/console.error","com.wsscode.pathom.core/error-str","com.wsscode.pathom.connect/mutate-async","com.wsscode.pathom.connect.connect_plugin","com.wsscode.pathom.core/error-handler-plugin","com.wsscode.pathom.core/trace-plugin"],"sourcesContent":["(ns com.wsscode.pathom.book.connect.batch3\n  (:require [com.wsscode.pathom.core :as p]\n            [com.wsscode.pathom.connect :as pc]\n            [cljs.core.async :as async :refer [go]]))\n\n(pc/defresolver list-things [_ _]\n  {::pc/output [{:items [:number]}]}\n  {:items [{:number 3}\n           {:number 10}\n           {:number 18}]})\n\n(pc/defresolver slow-resolver [_ input]\n  {::pc/input     #{:number}\n   ::pc/output    [:number-added]\n   ; use the transform, note we removed ::pc/batch? true, that's because the transform\n   ; will add this for us\n   ::pc/transform pc/transform-batch-resolver}\n  (go\n    (async/<! (async/timeout 1000))\n    ; no need to detect sequence, it is always a sequence now\n    (mapv (fn [v] {:number-added (inc (:number v))}) input)))\n\n(def app-registry [list-things slow-resolver])\n\n(def parser\n  (p/async-parser\n    {::p/env     {::p/reader        [p/map-reader\n                                     pc/async-reader2\n                                     pc/open-ident-reader]\n                  ::p/process-error (fn [env error]\n                                      (js/console.error \"ERROR\" error)\n                                      (p/error-str error))}\n     ::p/mutate  pc/mutate-async\n     ::p/plugins [(pc/connect-plugin {::pc/register app-registry})\n                  p/error-handler-plugin\n                  p/trace-plugin]}))\n"]}