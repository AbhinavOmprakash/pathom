{"version":3,"sources":["fulcro/inspect/lib/local_storage.cljs"],"mappings":";;;;AAKA,AAAA,AAAMA,AAAcC;AAApB,AACE,AAACC,AAAaD;;AAEhB,AAAA,AAAME,AAAeC;AAArB,AACE,AAACC,AAAcD;;AAEjB,AAAKE,AAAc,AAAgBC;AAInC,AAAA,AAAA,AAAAC,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AACFE;AADJ,AACS,AAAA,AAACC,AAAID;;;AADd,AAAA,AAAA,AAAMF,AAEFE,AAAIE;AAFR,AAGG,AAAAC,AAAe,AAAUT,AAAc,AAACW,AAAOL;AAA/C,AAAA,AAAAG;AAAA,AAAAA,AAASC;AAAT,AACE,AAACE,AAAYF;;AACbF;;;;AALL,AAAA,AAAA,AAAMJ;;AAAN,AAOA,AAAA,AAAMS,AAAMP,AAAII;AAAhB,AACE,AAAUV,AAAc,AAACW,AAAOL,AAAK,AAACK,AAAOD;;AAE/C,AAAA,AAAA,AAAAR,AAAMiB;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AAASb,AAAIoB,AAAIC;AAAvB,AACE,AAAU3B,AAAc,AAACW,AAAOL,AAAK,AAACK,AAAO,AAACiB,AAAMF,AAAE,AAACnB,AAAID,AAAKqB;;;AADlE,AAAA,AAAA,AAAMR;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA,AAAAC,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAAI,AAAA,AAAAF,AAAAF;AAAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAAK,AAAA;AAAA,AAAA,AAAAA,AAAAJ,AAAAG,AAAAJ;;;AAAA,AAGA,AAAA,AAAMS,AAASvB;AAAf,AACE,AAAaN,AAAcM;;AAI7B,AAAA,AAAA,AAAAJ,AAAM6B;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAA1B,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAM0B,AACFzB;AADJ,AACS,AAAA,AAAC0B,AAAK1B;;;AADf,AAAA,AAAA,AAAMyB,AAEFzB,AAAIE;AAFR,AAGG,AAAAC,AAAe,AAAUT,AAAc,AAACW,AAAOL;AAA/C,AAAA,AAAAG;AAAA,AAAAA,AAASC;AAAT,AACE,AAAChB,AAAagB;;AACdF;;;;AALL,AAAA,AAAA,AAAMuB;;AAAN,AAOA,AAAA,AAAME,AAAO3B,AAAII;AAAjB,AACE,AAAUV,AAAc,AAACW,AAAOL,AAAK,AAACT,AAAca","names":["fulcro.inspect.lib.local-storage/read-transit","s","fulcro.inspect.remote.transit/read","fulcro.inspect.lib.local-storage/write-transit","x","fulcro.inspect.remote.transit/write","fulcro.inspect.lib.local-storage/local-storage","js/window","var_args","G__60107","fulcro.inspect.lib.local-storage/get","js/Error","key","fulcro.inspect.lib.local_storage.get","default","temp__5718__auto__","value","cljs.core.pr_str","cljs.reader.read_string","fulcro.inspect.lib.local-storage/set!","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","fulcro.inspect.lib.local-storage/update!","seq60111","G__60112","cljs.core/first","cljs.core/next","G__60113","self__4717__auto__","f","args","cljs.core.apply","fulcro.inspect.lib.local-storage/remove!","G__60117","fulcro.inspect.lib.local-storage/tget","fulcro.inspect.lib.local_storage.tget","fulcro.inspect.lib.local-storage/tset!"],"sourcesContent":["(ns fulcro.inspect.lib.local-storage\n  (:refer-clojure :exclude [get set!])\n  (:require [cljs.reader :refer [read-string]]\n            [fulcro.inspect.remote.transit :as transit]))\n\n(defn read-transit [s]\n  (transit/read s))\n\n(defn write-transit [x]\n  (transit/write x))\n\n(def local-storage (.-localStorage js/window))\n\n;; edn\n\n(defn get\n  ([key] (get key nil))\n  ([key default]\n   (if-let [value (.getItem local-storage (pr-str key))]\n     (read-string value)\n     default)))\n\n(defn set! [key value]\n  (.setItem local-storage (pr-str key) (pr-str value)))\n\n(defn update! [key f & args]\n  (.setItem local-storage (pr-str key) (pr-str (apply f (get key) args))))\n\n(defn remove! [key]\n  (.removeItem local-storage key))\n\n;; transit\n\n(defn tget\n  ([key] (tget key nil))\n  ([key default]\n   (if-let [value (.getItem local-storage (pr-str key))]\n     (read-transit value)\n     default)))\n\n(defn tset! [key value]\n  (.setItem local-storage (pr-str key) (write-transit value)))\n"]}