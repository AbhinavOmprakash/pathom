{"version":3,"sources":["com/wsscode/pathom/book/connect/batch_transform_auto_batch.cljs"],"mappings":";;;;;AAKA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgBC;AAAhB,AAAA,AAAAD;;AAAA,AAA6BE,AAAEA;AAA/B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAMA,AAAA,AAAAH,AAAA,AAAA,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAgBO,AAIE,AAAA,AAACE;AAJnB,AAAA,AAAAT;;AAAA,AAAAC,AAA+BF;AAA/B,AAAA,AAAAG,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAyCM;AAAzC,AAKE,AAAAE,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA;AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAC,AAAA,AAAA,AACawB;AADb1B,AAAAA;AAAA,AAAA,AAAAG,AAAAH,AAAA,AAAAE;;AAAA,AAAA,AAAAD,AAAA;AAAA,AAAAG,AAAA,AAAAJ,AAAA;AAAAK,AAAA,AAAA;AAAAC,AAAA,AAAA,AAGsBb;AAHtBc,AAAA,AAAAD;AAAAE,AAAA,AAAAC,AAAAJ,AAAAE;AAAAP,AAAA,AAAAU,AAAAV;AAAA,AAAA,AAAAU,AAAA,AAAAN;;AAAAM;;AAAA,AAAA,AAAAC,AAAAX,AAAAQ;;AAAA;;;;;AAAA,AAAA;;;;AAAA,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC;;AAAA,AAAAD,AAAA,AAAA;;AAAAA;;AAAAZ;;AAAA,AAAA,AAAAc,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAAhB,AAAAC;AAAA,AAAA,AAAA,AAAAgB,AAAAD,AAAA;AAAA;;AAAAA;;;;AAAA,AAAA,AAAAE,AAAAC;AAAA,AAAAC,AAAAF;AAAA,AAAA,AAAAG,AAAApB;AAAA,AAAA,AAAAoB,AAAA,AAAAD;;AAAAC;AAAA,AAAAC,AAAArB;;AAAA;;AAAA,AAAA,AAAAiB;;;;AAAA,AAAA,AAAA,AAAAD,AAAAF,AAAA;AAAA,AAAAd;;;;AAAAc;;;;;AAAAd;;;;;AAAAA;;;;;;;;;;AAAAsB,AAAA,AAAAC,AAAA,AAAAzB;AAAA,AAAA,AAAAyB,AAAAC,AAAA,AAAA7B;;AAAA4B;;AAAA,AAAA,AAAAE,AAAAH;;;;AAAA3B;;AAKF,AAAA,AAAKgC,AAAc5C,AAAYS;AAE/B,AAAKoC,AACH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AACkCC,AACAC,AACAC,AACD,AAAKC,AAAIC;AAAT,AACE,AAAA,AAACC,AAAyBD;;AAC1B,AAACE,AAAYF;AANjD,AAAA,AAAA,AAOeG,AACC,AAAA,AAAA,AAACC,AAAiCX,AAClCY,AACAC","names":["com.wsscode.pathom.connect/resolver","G__60879","com.wsscode.pathom.book.connect.batch-transform-auto-batch/list-things","_","G__60889","p__60896","map__60900","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","com.wsscode.pathom.book.connect.batch-transform-auto-batch/slow-resolver","number","com.wsscode.pathom.connect/transform-auto-batch","c__47946__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__47947__auto__","switch__47663__auto__","state_60923","state_val_60925","inst_60913","cljs.core.async.impl.ioc-helpers/take!","inst_60915","inst_60917","inst_60919","inst_60920","inst_60921","cljs.core/PersistentHashMap","statearr-60970","cljs.core.async.impl.ioc-helpers/return-chan","statearr-60987","state-machine__47664__auto__","ret-value__47665__auto__","result__47666__auto__","cljs.core/keyword-identical?","e60996","js/Object","ex__47667__auto__","statearr-61011","cljs.core.async.impl.ioc-helpers/process-exception","state__47948__auto__","statearr-61057","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.async/timeout","com.wsscode.pathom.book.connect.batch-transform-auto-batch/app-registry","com.wsscode.pathom.book.connect.batch-transform-auto-batch/parser","com.wsscode.pathom.core/async-parser","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/async-reader2","com.wsscode.pathom.connect/open-ident-reader","env","error","js/console.error","com.wsscode.pathom.core/error-str","com.wsscode.pathom.connect/mutate-async","com.wsscode.pathom.connect.connect_plugin","com.wsscode.pathom.core/error-handler-plugin","com.wsscode.pathom.core/trace-plugin"],"sourcesContent":["(ns com.wsscode.pathom.book.connect.batch-transform-auto-batch\n  (:require [com.wsscode.pathom.core :as p]\n            [com.wsscode.pathom.connect :as pc]\n            [cljs.core.async :as async :refer [go]]))\n\n(pc/defresolver list-things [_ _]\n  {::pc/output [{:items [:number]}]}\n  {:items [{:number 3}\n           {:number 10}\n           {:number 18}]})\n\n(pc/defresolver slow-resolver [_ {:keys [number]}]\n  {::pc/input     #{:number}\n   ::pc/output    [:number-added]\n   ; set auto-batch with concurrency of 10\n   ::pc/transform (pc/transform-auto-batch 10)}\n  (go\n    (async/<! (async/timeout 1000))\n    ; dealing with the single case, as in the first example we did on batch\n    {:number-added (inc number)}))\n\n(def app-registry [list-things slow-resolver])\n\n(def parser\n  (p/async-parser\n    {::p/env     {::p/reader        [p/map-reader\n                                     pc/async-reader2\n                                     pc/open-ident-reader]\n                  ::p/process-error (fn [env error]\n                                      (js/console.error \"ERROR\" error)\n                                      (p/error-str error))}\n     ::p/mutate  pc/mutate-async\n     ::p/plugins [(pc/connect-plugin {::pc/register app-registry})\n                  p/error-handler-plugin\n                  p/trace-plugin]}))\n"]}