{"version":3,"sources":["fulcro/inspect/ui/helpers.cljs"],"mappings":"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","names":["fulcro.inspect.ui.helpers/js-get-in","x","path","G__56906","G__56907","goog.object/getValueByKeys","cljs.core/clj->js","fulcro.inspect.ui.helpers/html-attr-merge","a","b","cljs.core/map?","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","fulcro.inspect.ui.helpers/props->html","seq56910","G__56911","cljs.core/first","cljs.core/next","self__4717__auto__","attrs","props","p1__56909#","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core.apply.cljs$core$IFn$_invoke$arity$4","cljs.core/merge-with","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core.filter.cljs$core$IFn$_invoke$arity$1","p__56922","vec__56924","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","k","_","cljs.core/simple-keyword?","fulcro.inspect.ui.helpers/expand-classes","css","classes","clojure.string.join.cljs$core$IFn$_invoke$arity$2","fulcro.inspect.ui.helpers/props","comp","defaults","fulcro.inspect.ui.helpers.props__GT_html.cljs$core$IFn$_invoke$arity$variadic","fulcro.client.primitives/props","fulcro.inspect.ui.helpers/props+classes","G__56939","fulcro.client.primitives/react-type","fulcro-css.css/get-classnames","G__56944","fulcro.inspect.ui.helpers/computed-factory","js/Error","class","fulcro.inspect.ui.helpers.computed_factory.cljs$core$IFn$_invoke$arity$2","options","factory","fulcro.client.primitives.factory.cljs$core$IFn$_invoke$arity$2","fulcro$inspect$ui$helpers$real_factory.cljs$core$IFn$_invoke$arity$2","computed","G__56949","fulcro.client.primitives/computed","fulcro.inspect.ui.helpers/react-display-name","element","or__4131__auto__","G__56956","goog.object/get","cljs.core.symbol.cljs$core$IFn$_invoke$arity$1","G__56959"],"sourcesContent":["(ns fulcro.inspect.ui.helpers\n  (:require [fulcro-css.css :as css]\n            [clojure.string :as str]\n            [goog.object :as gobj]\n            [fulcro.client.primitives :as fp]))\n\n(defn js-get-in [x path]\n  (gobj/getValueByKeys x (clj->js path)))\n\n(defn html-attr-merge [a b]\n  (cond\n    (map? a) (merge a b)\n    (string? a) (str a \" \" b)\n    :else b))\n\n(defn props->html\n  [attrs & props]\n  (->> (mapv #(dissoc % :react-key) props)\n       (apply merge-with html-attr-merge (dissoc attrs :react-key))\n       (into {} (filter (fn [[k _]] (simple-keyword? k))))\n       (clj->js)))\n\n(defn expand-classes [css classes]\n  {:className (str/join \" \" (mapv css classes))})\n\n(defn props\n  [comp defaults]\n  (props->html defaults (fp/props comp)))\n\n(defn props+classes [comp defaults]\n  (let [props (fp/props comp)\n        css   (-> comp fp/react-type css/get-classnames)]\n    (props->html defaults\n                 (expand-classes css (:fulcro.inspect.ui.core/classes props))\n                 props)))\n\n(defn computed-factory\n  ([class] (computed-factory class {}))\n  ([class options]\n   (let [factory (fp/factory class options)]\n     (fn real-factory\n       ([props] (real-factory props {}))\n       ([props computed]\n        (factory (fp/computed props computed)))))))\n\n(defn react-display-name [element]\n  (or\n    (some-> element (gobj/get \"displayName\") symbol)\n    (some-> element fp/react-type (gobj/get \"displayName\") symbol)))\n"]}