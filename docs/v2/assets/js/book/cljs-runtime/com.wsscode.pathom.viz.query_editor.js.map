{"version":3,"sources":["com/wsscode/pathom/viz/query_editor.cljs"],"mappings":"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","names":["com.wsscode.pathom.viz.query-editor/remote-key","com.wsscode.pathom.viz.query-editor/safe-read","s","e94202","cljs.reader.read_string","_","com.wsscode.pathom.connect/resolver","G__94204","p__94205","map__94206","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","com.wsscode.pathom.viz.query-editor/indexes","client-parser","G__94210","G__94211","com.wsscode.pathom.connect/mutation","p__94212","p__94213","map__94214","map__94215","com.wsscode.pathom.viz.query-editor/run-query","id","query","request-trace?","c__47946__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__47947__auto__","switch__47663__auto__","state_94249","state_val_94250","inst_94224","cljs.core/PersistentVector","inst_94225","inst_94226","inst_94229","statearr-94252","statearr-94253","statearr-94254","inst_94232","statearr-94255","statearr-94261","inst_94235","inst_94236","cljs.core/PersistentHashMap","inst_94237","cljs.core.async.impl.ioc-helpers/take!","inst_94239","inst_94240","inst_94241","inst_94242","inst_94243","inst_94244","inst_94245","inst_94246","cljs.core.async.impl.ioc-helpers/return-chan","statearr-94263","state-machine__47664__auto__","ret-value__47665__auto__","result__47666__auto__","cljs.core/keyword-identical?","e94265","js/Object","ex__47667__auto__","statearr-94266","cljs.core.async.impl.ioc-helpers/process-exception","state__47948__auto__","statearr-94269","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.conj","cljs.core.merge","com.wsscode.pathom.viz.helpers/pprint","cljs.core/dissoc","cljs.core/select-keys","var_args","G__94271","com.wsscode.pathom.viz.query-editor/client-card-parser","js/Error","p__94274","map__94275","com.wsscode.pathom.viz.query_editor.client_card_parser","wrap-run-query","card-parser","com.wsscode.pathom.core/parallel-parser","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/parallel-reader","com.wsscode.pathom.connect/open-ident-reader","com.wsscode.pathom.connect/mutate-async","com.wsscode.pathom.core/error-handler-plugin","com.wsscode.pathom.core/request-cache-plugin","com.wsscode.pathom.connect.connect_plugin","G__94278","cljs.core.update","cljs.core.dissoc","com.wsscode.pathom.core/trace-plugin","env","tx","cljs.core.assoc","fulcro.client.mutations/mutate","fulcro-incoming-env","map__94280","ast","state","fulcro.client.mutations/returning","com.wsscode.pathom.viz.query-editor/TransactionResponse","com.wsscode.pathom.viz.query-editor/load-indexes","app-or-reconciler","reconciler","or__4131__auto__","root-ident","fulcro.client.primitives/app-state","cljs.core/deref","fulcro.client.data_fetch.load","com.wsscode.pathom.viz.query-editor/QueryEditor","js/com","js/com.wsscode","js/com.wsscode.pathom","js/com.wsscode.pathom.viz","js/com.wsscode.pathom.viz.query-editor","js/com.wsscode.pathom.viz.query-editor.TransactionResponse","this__51967__auto__","js/React.Component","goog.object/extend","js/React.Component.prototype","fulcro.client.primitives/default-component-prototype","fulcro.client.primitives/-register-component!","x94286","this__50885__auto__","*reconciler*-orig-val__94287","fulcro.client.primitives/*reconciler*","*depth*-orig-val__94288","fulcro.client.primitives/*depth*","*shared*-orig-val__94289","fulcro.client.primitives/*shared*","*instrument*-orig-val__94290","fulcro.client.primitives/*instrument*","*parent*-orig-val__94291","fulcro.client.primitives/*parent*","*reconciler*-temp-val__94292","fulcro.client.primitives/get-reconciler","*depth*-temp-val__94293","fulcro.client.primitives/depth","*shared*-temp-val__94294","fulcro.client.primitives.shared","*instrument*-temp-val__94295","fulcro.client.primitives/instrument","*parent*-temp-val__94296","fulcro.client.primitives/props","x94297","this","props","x94298","this__51970__auto__","writer__51971__auto__","opt__51972__auto__","cljs.core/-write","js/com.wsscode.pathom.viz.query-editor.Button","x94301","*reconciler*-orig-val__94302","*depth*-orig-val__94303","*shared*-orig-val__94304","*instrument*-orig-val__94305","*parent*-orig-val__94306","*reconciler*-temp-val__94307","*depth*-temp-val__94308","*shared*-temp-val__94309","*instrument*-temp-val__94310","*parent*-temp-val__94311","x94312","x94313","com.wsscode.pathom.viz.query-editor/Button","fulcro.client.localized_dom.button","fulcro.client.primitives/children","com.wsscode.pathom.viz.query-editor/button","fulcro.client.primitives.factory","js/com.wsscode.pathom.viz.query-editor.QueryEditor","x94324","*reconciler*-orig-val__94326","*depth*-orig-val__94327","*shared*-orig-val__94328","*instrument*-orig-val__94329","*parent*-orig-val__94330","*reconciler*-temp-val__94331","*depth*-temp-val__94332","*shared*-temp-val__94333","*instrument*-temp-val__94334","*parent*-temp-val__94335","map__94337","map__94338","fulcro.client.primitives.get_computed","fulcro-css.css-implementation/get-classnames","this__50869__auto__","reconciler__50870__auto__","lifecycle__50871__auto__","cljs.core.get_in","indexer__50872__auto__","goog.object/set","fulcro.client.impl.protocols/index-component!","ret__50860__auto__","obj94377","x94379","x94380","result","query-running?","trace","indexes","default-trace-size","editor-props","css","cljs.core/random-uuid","com.wsscode.pathom.viz.trace/D3Trace","js/setTimeout","fulcro.client.primitives.set_state_BANG_","map__94364","cljs.core/not","cljs.core.sequence","cljs.core/seq","cljs.core.concat","cljs.core/List","cljs.core/array-map","fulcro.client.primitives.ptransact_BANG_","run-query","fulcro.client.primitives.get_state","fulcro.client.localized_dom.div","fulcro.client.localized_dom.label","fulcro.client.localized_dom.input","fulcro.client.mutations/toggle!","G__94347","G__94348","G__94350","G__94351","com.wsscode.pathom.viz.codemirror/pathom","p1__94315#","cljs.core/map?","com.wsscode.pathom.core/elide-not-found","fulcro.client.mutations/set-value!","com.wsscode.pathom.viz.helpers/drag-resize","fulcro.client.localized-dom/div","com.wsscode.pathom.viz.codemirror/clojure","G__94358","p1__94316#","com.wsscode.pathom.viz.trace/d3-trace","js/console.log","com.wsscode.pathom.viz.query-editor/query-editor","fulcro.client.primitives.computed_factory"],"sourcesContent":["(ns com.wsscode.pathom.viz.query-editor\n  (:require [cljs.core.async :refer [go <!]]\n            [cljs.reader :refer [read-string]]\n            [com.wsscode.pathom.connect :as pc]\n            [com.wsscode.pathom.core :as p]\n            [com.wsscode.pathom.fulcro.network :as pfn]\n            [com.wsscode.pathom.viz.codemirror :as cm]\n            [com.wsscode.pathom.viz.helpers :as pvh]\n            [com.wsscode.pathom.viz.trace :as pvt]\n            [fulcro.client.data-fetch :as df]\n            [fulcro.client.localized-dom :as dom]\n            [fulcro.client.mutations :as fm]\n            [fulcro.client.primitives :as fp]))\n\n(declare QueryEditor TransactionResponse)\n\n(def remote-key :pathom-query-editor-remote)\n\n(defn safe-read [s]\n  (try\n    (read-string s)\n    (catch :default _ nil)))\n\n;; Parser\n\n(pc/defresolver indexes [{::keys [client-parser]} _]\n  {::pc/output [::pc/indexes]}\n  (client-parser {} [{::pc/indexes [::pc/idents ::pc/index-io ::pc/autocomplete-ignore]}]))\n\n(pc/defmutation run-query [{::keys [client-parser]} {::keys [id query request-trace?]}]\n  {::pc/params [::query]\n   ::pc/output [::id ::result]}\n  (go\n    (let [pull-keys [:com.wsscode.pathom/trace]\n          query     (cond-> (safe-read query) request-trace? (conj :com.wsscode.pathom/trace))\n          response  (<! (client-parser {} query))]\n      (merge\n        {::id                      id\n         ::result                  (pvh/pprint (apply dissoc response pull-keys))\n         :com.wsscode.pathom/trace nil}\n        (select-keys response pull-keys)))))\n\n(defn client-card-parser\n  \"Returns a new parser that will use the card-parser setting the client\n  parser to be `client-parser`.\"\n  ([client-parser] (client-card-parser client-parser {}))\n  ([client-parser {::keys [wrap-run-query]}]\n   (let [card-parser\n         (p/parallel-parser {::p/env     {::p/reader [p/map-reader pc/parallel-reader pc/open-ident-reader]}\n                             ::p/mutate  pc/mutate-async\n                             ::p/plugins [p/error-handler-plugin\n                                          p/request-cache-plugin\n                                          (-> (pc/connect-plugin {::pc/register [indexes (cond-> run-query\n                                                                                           wrap-run-query\n                                                                                           (update ::pc/mutate wrap-run-query))]})\n                                              (dissoc ::pc/register))\n                                          p/trace-plugin]})]\n     (fn [env tx]\n       (card-parser (assoc env ::client-parser client-parser) tx)))))\n\n(fm/defmutation run-query [_]\n  (pathom-query-editor-remote [{:keys [ast state]}]\n    (fm/returning ast state TransactionResponse)))\n\n(defn load-indexes\n  [app-or-reconciler]\n  (let [reconciler (or (:reconciler app-or-reconciler) app-or-reconciler)\n        root-ident (-> reconciler fp/app-state deref :ui/root)]\n    (df/load reconciler root-ident QueryEditor\n      {:focus  [::pc/indexes]\n       :remote remote-key})))\n\n;; UI\n\n(fp/defsc TransactionResponse [_ _]\n  {:ident [::id ::id]\n   :query [::id ::result :com.wsscode.pathom/trace]})\n\n(fp/defsc Button\n  [this props]\n  {:css [[:.container\n          {:font-size   \"11px\"\n           :font-family \"'Open Sans', sans-serif\"\n           :font-weight \"600\"}\n          {:background-color \"#4b5b6d\"\n           :border           \"none\"\n           :border-radius    \"3px\"\n           :color            \"#fff\"\n           :cursor           \"pointer\"\n           :display          \"inline-block\"\n           :padding          \"2px 8px\"\n           :line-height      \"1.5\"\n           :margin-bottom    \"0\"\n           :text-align       \"center\"\n           :white-space      \"nowrap\"\n           :vertical-align   \"middle\"\n           :user-select      \"none\"\n           :outline          \"none\"}\n          [:&:disabled {:background \"#b0c1d6\"\n                        :color      \"#eaeaea\"}]]]}\n  (dom/button :.container props (fp/children this)))\n\n(def button (fp/factory Button))\n\n(fp/defsc QueryEditor\n  [this\n   {::keys                   [query result request-trace?]\n    :ui/keys                 [query-running?]\n    :com.wsscode.pathom/keys [trace]\n    ::pc/keys                [indexes]}\n   {::keys [default-trace-size editor-props]\n    :or    {default-trace-size 400}} css]\n  {:initial-state     (fn [_]\n                        {::id             (random-uuid)\n                         ::request-trace? true\n                         ::query          \"[]\"\n                         ::result         \"\"})\n   :ident             [::id ::id]\n   :query             [::id ::request-trace? ::query ::result :ui/query-running?\n                       ::pc/indexes :com.wsscode.pathom/trace]\n   :css               [[:$CodeMirror {:height   \"100% !important\"\n                                      :width    \"100% !important\"\n                                      :position \"absolute !important\"\n                                      :z-index  \"1\"}\n                        [:$cm-atom-composite {:color \"#ab890d\"}]\n                        [:$cm-atom-ident {:color       \"#219\"\n                                          :font-weight \"bold\"}]]\n                       [:$CodeMirror-hint {:font-size \"10px\"}]\n                       [:.container {:border         \"1px solid #ddd\"\n                                     :display        \"flex\"\n                                     :flex-direction \"column\"\n                                     :flex           \"1\"\n                                     :max-width      \"100%\"\n                                     :min-height     \"200px\"}]\n                       [:.query-row {:display  \"flex\"\n                                     :flex     \"1\"\n                                     :position \"relative\"}]\n                       [:.toolbar {:background    \"#eeeeee\"\n                                   :border-bottom \"1px solid #e0e0e0\"\n                                   :padding       \"5px 4px\"\n                                   :display       \"flex\"\n                                   :align-items   \"center\"\n                                   :font-family   \"sans-serif\"\n                                   :font-size     \"13px\"}\n                        [:label {:display     \"flex\"\n                                 :align-items \"center\"}\n                         [:input {:margin-right \"5px\"}]]]\n                       [:.flex {:flex \"1\"}]\n                       [:.editor {:position \"relative\"}]\n                       [:.divisor-v {:width         \"20px\"\n                                     :background    \"#eee\"\n                                     :border        \"1px solid #e0e0e0\"\n                                     :border-top    \"0\"\n                                     :border-bottom \"0\"\n                                     :z-index       \"2\"}]\n                       [:.divisor-h {:height       \"20px\"\n                                     :background   \"#eee\"\n                                     :border       \"1px solid #e0e0e0\"\n                                     :border-left  \"0\"\n                                     :border-right \"0\"\n                                     :z-index      \"2\"}]\n                       [:.result {:flex     \"1\"\n                                  :position \"relative\"}\n                        [:$CodeMirror {:background \"#f6f7f8\"}]]\n                       [:.trace {:display     \"flex\"\n                                 :padding-top \"18px\"}]]\n   :css-include       [pvt/D3Trace Button]\n   :componentDidMount (fn []\n                        (js/setTimeout\n                          #(fp/set-state! this {:render? true})\n                          100))\n   :initLocalState    (fn []\n                        {:run-query (fn []\n                                      (let [{:ui/keys [query-running?] :as props} (fp/props this)]\n                                        (if-not query-running?\n                                          (fp/ptransact! this [`(fm/set-props {:ui/query-running? true})\n                                                               `(run-query ~props)\n                                                               `(fm/set-props {:ui/query-running? false})]))))})}\n  (let [run-query (fp/get-state this :run-query)]\n    (dom/div :.container\n\n      (dom/div :.toolbar\n        (dom/label\n          (dom/input {:type     \"checkbox\"\n                      :checked  request-trace?\n                      :onChange #(fm/toggle! this ::request-trace?)})\n          \"Request trace\")\n        (dom/div :.flex)\n        (button {:onClick #(load-indexes (fp/get-reconciler this))\n                 :style   {:marginRight \"6px\"}}\n          \"Refresh index\")\n        (button {:onClick  run-query\n                 :disabled query-running?}\n          \"Run query\"))\n\n      (dom/div :.query-row\n        (when (fp/get-state this :render?)\n          (cm/pathom\n            (merge {:className   (:editor css)\n                    :style       {:width (str (or (fp/get-state this :query-width) 400) \"px\")}\n                    :value       (or (str query) \"\")\n                    ::pc/indexes (if (map? indexes) (p/elide-not-found indexes))\n                    ::cm/options {::cm/extraKeys\n                                  {\"Cmd-Enter\"   run-query\n                                   \"Ctrl-Enter\"  run-query\n                                   \"Shift-Enter\" run-query\n                                   \"Cmd-J\"       \"pathomJoin\"\n                                   \"Ctrl-Space\"  \"autocomplete\"}}\n                    :onChange    #(fm/set-value! this ::query %)}\n              editor-props)))\n        (pvh/drag-resize this {:attribute :query-width\n                               :axis      \"x\"\n                               :default   400\n                               :props     {:className (:divisor-v css)}}\n          (dom/div))\n        (if (fp/get-state this :render?)\n          (cm/clojure\n            (merge {:className   (:result css)\n                    :value       result\n                    ::cm/options {::cm/readOnly    true\n                                  ::cm/lineNumbers true}}\n              editor-props))))\n      (if trace\n        (pvh/drag-resize this {:attribute :trace-height\n                               :default   default-trace-size\n                               :props     {:className (:divisor-h css)}}\n          (dom/div)))\n      (if trace\n        (dom/div :.trace {:style {:height (str (or (fp/get-state this :trace-height) default-trace-size) \"px\")}}\n          (pvt/d3-trace {::pvt/trace-data      trace\n                         ::pvt/on-show-details #(js/console.log %)}))))))\n\n(def query-editor (fp/computed-factory QueryEditor))\n"]}