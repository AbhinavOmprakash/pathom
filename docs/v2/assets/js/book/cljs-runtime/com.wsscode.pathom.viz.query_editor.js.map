{"version":3,"sources":["com/wsscode/pathom/viz/query_editor.cljs"],"mappings":"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","names":["com.wsscode.pathom.viz.query-editor/remote-key","com.wsscode.pathom.viz.query-editor/safe-read","s","e54726","cljs.reader.read_string","_","com.wsscode.pathom.connect/resolver","G__54730","p__54741","map__54742","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","com.wsscode.pathom.viz.query-editor/indexes","client-parser","G__54749","G__54750","com.wsscode.pathom.connect/mutation","p__54764","p__54765","map__54766","map__54767","com.wsscode.pathom.viz.query-editor/run-query","id","query","request-trace?","ch__53995__auto__","cljs.core.async.promise_chan","c__48522__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__48523__auto__","switch__48139__auto__","state_54890","state_val_54892","inst_54822","statearr-54895","inst_54882","cljs.core.async/close!","statearr-54898","statearr-54900","inst_54798","statearr-54901","inst_54867","statearr-54912","inst_54879","inst_54884","cljs.core.async.put_BANG_","statearr-54918","inst_54836","inst_54857","com.wsscode.async.async-cljs/promise->chan","cljs.core.async.impl.ioc-helpers/take!","inst_54886","cljs.core.async.impl.ioc-helpers/return-chan","inst_54827","statearr-54929","statearr-54931","inst_54880","statearr-54935","statearr-54936","statearr-54937","inst_54842","inst_54843","com.wsscode.async.async-cljs/throw-err","statearr-54939","statearr-54940","cljs.core/cons","inst_54815","cljs.core/PersistentVector","inst_54816","inst_54817","statearr-54941","statearr-54942","statearr-54943","inst_54865","statearr-54944","inst_54869","inst_54870","inst_54871","inst_54872","inst_54873","inst_54874","cljs.core/PersistentHashMap","inst_54875","inst_54876","statearr-54947","cljs.core/rest","statearr-54948","statearr-54949","ex54945","statearr-54950","statearr-54951","statearr-54953","inst_54859","inst_54860","com.wsscode.async.async-cljs/consumer-pair","statearr-54960","inst_54845","com.wsscode.async.async-cljs/promise?","statearr-54973","statearr-54974","statearr-54975","inst_54832","inst_54835","inst_54837","com.wsscode.async.async-cljs/chan?","statearr-54978","statearr-54979","statearr-54980","statearr-54987","state-machine__48140__auto__","ret-value__48141__auto__","result__48142__auto__","cljs.core/keyword-identical?","ex__48143__auto__","e54989","statearr-54990","cljs.core/seq","statearr-54991","cljs.core/first","state__48524__auto__","statearr-54996","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.conj","cljs.core.merge","com.wsscode.pathom.viz.helpers/pprint","cljs.core/dissoc","cljs.core/select-keys","var_args","G__54998","com.wsscode.pathom.viz.query-editor/client-card-parser","js/Error","p__55002","map__55003","com.wsscode.pathom.viz.query_editor.client_card_parser","wrap-run-query","card-parser","com.wsscode.pathom.core/parallel-parser","com.wsscode.pathom.core/map-reader","com.wsscode.pathom.connect/parallel-reader","com.wsscode.pathom.connect/open-ident-reader","com.wsscode.pathom.connect/mutate-async","com.wsscode.pathom.core/error-handler-plugin","com.wsscode.pathom.core/request-cache-plugin","com.wsscode.pathom.connect.connect_plugin","G__55007","cljs.core.update","cljs.core.dissoc","com.wsscode.pathom.core/trace-plugin","env","tx","cljs.core.assoc","fulcro.client.mutations/mutate","fulcro-incoming-env","map__55008","ast","state","fulcro.client.mutations/returning","com.wsscode.pathom.viz.query-editor/TransactionResponse","com.wsscode.pathom.viz.query-editor/load-indexes","app-or-reconciler","reconciler","or__4131__auto__","root-ident","fulcro.client.primitives/app-state","cljs.core/deref","fulcro.client.data_fetch.load","com.wsscode.pathom.viz.query-editor/QueryEditor","js/com","js/com.wsscode","js/com.wsscode.pathom","js/com.wsscode.pathom.viz","js/com.wsscode.pathom.viz.query-editor","js/com.wsscode.pathom.viz.query-editor.TransactionResponse","this__53741__auto__","js/React.Component","goog.object/extend","js/React.Component.prototype","fulcro.client.primitives/default-component-prototype","fulcro.client.primitives/-register-component!","x55018","this__52659__auto__","*reconciler*-orig-val__55019","fulcro.client.primitives/*reconciler*","*depth*-orig-val__55020","fulcro.client.primitives/*depth*","*shared*-orig-val__55021","fulcro.client.primitives/*shared*","*instrument*-orig-val__55022","fulcro.client.primitives/*instrument*","*parent*-orig-val__55023","fulcro.client.primitives/*parent*","*reconciler*-temp-val__55024","fulcro.client.primitives/get-reconciler","*depth*-temp-val__55025","fulcro.client.primitives/depth","*shared*-temp-val__55026","fulcro.client.primitives.shared","*instrument*-temp-val__55027","fulcro.client.primitives/instrument","*parent*-temp-val__55028","fulcro.client.primitives/props","x55030","this","props","x55035","this__53744__auto__","writer__53745__auto__","opt__53746__auto__","cljs.core/-write","js/com.wsscode.pathom.viz.query-editor.Button","x55044","*reconciler*-orig-val__55045","*depth*-orig-val__55046","*shared*-orig-val__55047","*instrument*-orig-val__55048","*parent*-orig-val__55049","*reconciler*-temp-val__55050","*depth*-temp-val__55051","*shared*-temp-val__55052","*instrument*-temp-val__55053","*parent*-temp-val__55054","x55056","x55059","com.wsscode.pathom.viz.query-editor/Button","fulcro.client.localized_dom.button","fulcro.client.primitives/children","com.wsscode.pathom.viz.query-editor/button","fulcro.client.primitives.factory","js/com.wsscode.pathom.viz.query-editor.QueryEditor","x55070","*reconciler*-orig-val__55071","*depth*-orig-val__55072","*shared*-orig-val__55073","*instrument*-orig-val__55074","*parent*-orig-val__55075","*reconciler*-temp-val__55076","*depth*-temp-val__55077","*shared*-temp-val__55078","*instrument*-temp-val__55079","*parent*-temp-val__55080","map__55082","map__55083","fulcro.client.primitives.get_computed","fulcro-css.css-implementation/get-classnames","this__52643__auto__","reconciler__52644__auto__","lifecycle__52645__auto__","cljs.core.get_in","indexer__52646__auto__","goog.object/set","fulcro.client.impl.protocols/index-component!","ret__52634__auto__","obj55105","x55106","x55108","result","query-running?","trace","indexes","default-trace-size","editor-props","enable-trace?","css","cljs.core/random-uuid","com.wsscode.pathom.viz.trace/D3Trace","js/setTimeout","fulcro.client.primitives.set_state_BANG_","map__55097","map__55098","cljs.core/not","p1__55063#","and__4120__auto__","cljs.core.sequence","cljs.core.concat","cljs.core/List","cljs.core/array-map","fulcro.client.primitives.ptransact_BANG_","run-query","fulcro.client.primitives.get_state","fulcro.client.localized_dom.div","fulcro.client.localized_dom.label","fulcro.client.localized_dom.input","fulcro.client.mutations/toggle!","G__55088","G__55089","G__55091","G__55092","com.wsscode.pathom.viz.codemirror/pathom","p1__55064#","cljs.core/map?","com.wsscode.pathom.core/elide-not-found","fulcro.client.mutations/set-value!","com.wsscode.pathom.viz.helpers/drag-resize","fulcro.client.localized-dom/div","com.wsscode.pathom.viz.codemirror/clojure","G__55094","p1__55065#","com.wsscode.pathom.viz.trace/d3-trace","js/console.log","com.wsscode.pathom.viz.query-editor/query-editor","fulcro.client.primitives.computed_factory"],"sourcesContent":["(ns com.wsscode.pathom.viz.query-editor\n  (:require [cljs.core.async :refer [go <!]]\n            [cljs.reader :refer [read-string]]\n            [com.wsscode.async.async-cljs :refer [go-promise <?maybe]]\n            [com.wsscode.pathom.connect :as pc]\n            [com.wsscode.pathom.core :as p]\n            [com.wsscode.pathom.fulcro.network :as pfn]\n            [com.wsscode.pathom.viz.codemirror :as cm]\n            [com.wsscode.pathom.viz.helpers :as pvh]\n            [com.wsscode.pathom.viz.trace :as pvt]\n            [fulcro.client.data-fetch :as df]\n            [fulcro.client.localized-dom :as dom]\n            [fulcro.client.mutations :as fm]\n            [fulcro.client.primitives :as fp]))\n\n(declare QueryEditor TransactionResponse)\n\n(def remote-key :pathom-query-editor-remote)\n\n(defn safe-read [s]\n  (try\n    (read-string s)\n    (catch :default _ nil)))\n\n;; Parser\n\n(pc/defresolver indexes [{::keys [client-parser]} _]\n  {::pc/output [::pc/indexes]}\n  (client-parser {} [{::pc/indexes [::pc/idents ::pc/index-io ::pc/autocomplete-ignore]}]))\n\n(pc/defmutation run-query [{::keys [client-parser]} {::keys [id query request-trace?]}]\n  {::pc/params [::query]\n   ::pc/output [::id ::result]}\n  (go-promise\n    (let [pull-keys [:com.wsscode.pathom/trace]\n          query     (cond-> (safe-read query) request-trace? (conj :com.wsscode.pathom/trace))\n          response  (<?maybe (client-parser {} query))]\n      (merge\n        {::id                      id\n         ::result                  (pvh/pprint (apply dissoc response pull-keys))\n         :com.wsscode.pathom/trace nil}\n        (select-keys response pull-keys)))))\n\n(defn client-card-parser\n  \"Returns a new parser that will use the card-parser setting the client\n  parser to be `client-parser`.\"\n  ([client-parser] (client-card-parser client-parser {}))\n  ([client-parser {::keys [wrap-run-query]}]\n   (let [card-parser\n         (p/parallel-parser {::p/env     {::p/reader [p/map-reader pc/parallel-reader pc/open-ident-reader]}\n                             ::p/mutate  pc/mutate-async\n                             ::p/plugins [p/error-handler-plugin\n                                          p/request-cache-plugin\n                                          (-> (pc/connect-plugin {::pc/register [indexes (cond-> run-query\n                                                                                           wrap-run-query\n                                                                                           (update ::pc/mutate wrap-run-query))]})\n                                              (dissoc ::pc/register))\n                                          p/trace-plugin]})]\n     (fn [env tx]\n       (card-parser (assoc env ::client-parser client-parser) tx)))))\n\n(fm/defmutation run-query [_]\n  (pathom-query-editor-remote [{:keys [ast state]}]\n    (fm/returning ast state TransactionResponse)))\n\n(defn load-indexes\n  [app-or-reconciler]\n  (let [reconciler (or (:reconciler app-or-reconciler) app-or-reconciler)\n        root-ident (-> reconciler fp/app-state deref :ui/root)]\n    (df/load reconciler root-ident QueryEditor\n      {:focus  [::pc/indexes]\n       :remote remote-key})))\n\n;; UI\n\n(fp/defsc TransactionResponse [_ _]\n  {:ident [::id ::id]\n   :query [::id ::result :com.wsscode.pathom/trace]})\n\n(fp/defsc Button\n  [this props]\n  {:css [[:.container\n          {:font-size   \"11px\"\n           :font-family \"'Open Sans', sans-serif\"\n           :font-weight \"600\"}\n          {:background-color \"#4b5b6d\"\n           :border           \"none\"\n           :border-radius    \"3px\"\n           :color            \"#fff\"\n           :cursor           \"pointer\"\n           :display          \"inline-block\"\n           :padding          \"2px 8px\"\n           :line-height      \"1.5\"\n           :margin-bottom    \"0\"\n           :text-align       \"center\"\n           :white-space      \"nowrap\"\n           :vertical-align   \"middle\"\n           :user-select      \"none\"\n           :outline          \"none\"}\n          [:&:disabled {:background \"#b0c1d6\"\n                        :color      \"#eaeaea\"}]]]}\n  (dom/button :.container props (fp/children this)))\n\n(def button (fp/factory Button))\n\n(fp/defsc QueryEditor\n  [this\n   {::keys                   [query result request-trace?]\n    :ui/keys                 [query-running?]\n    :com.wsscode.pathom/keys [trace]\n    ::pc/keys                [indexes]}\n   {::keys [default-trace-size editor-props\n            enable-trace?]\n    :or    {default-trace-size 400\n            enable-trace?      true}} css]\n  {:initial-state     (fn [_]\n                        {::id             (random-uuid)\n                         ::request-trace? true\n                         ::query          \"[]\"\n                         ::result         \"\"})\n   :ident             [::id ::id]\n   :query             [::id ::request-trace? ::query ::result :ui/query-running?\n                       ::pc/indexes :com.wsscode.pathom/trace]\n   :css               [[:$CodeMirror {:height   \"100% !important\"\n                                      :width    \"100% !important\"\n                                      :position \"absolute !important\"\n                                      :z-index  \"1\"}\n                        [:$cm-atom-composite {:color \"#ab890d\"}]\n                        [:$cm-atom-ident {:color       \"#219\"\n                                          :font-weight \"bold\"}]]\n                       [:$CodeMirror-hint {:font-size \"10px\"}]\n                       [:.container {:border         \"1px solid #ddd\"\n                                     :display        \"flex\"\n                                     :flex-direction \"column\"\n                                     :flex           \"1\"\n                                     :max-width      \"100%\"\n                                     :min-height     \"200px\"}]\n                       [:.query-row {:display  \"flex\"\n                                     :flex     \"1\"\n                                     :position \"relative\"}]\n                       [:.toolbar {:background    \"#eeeeee\"\n                                   :border-bottom \"1px solid #e0e0e0\"\n                                   :padding       \"5px 4px\"\n                                   :display       \"flex\"\n                                   :align-items   \"center\"\n                                   :font-family   \"sans-serif\"\n                                   :font-size     \"13px\"}\n                        [:label {:display     \"flex\"\n                                 :align-items \"center\"}\n                         [:input {:margin-right \"5px\"}]]]\n                       [:.flex {:flex \"1\"}]\n                       [:.editor {:position \"relative\"}]\n                       [:.divisor-v {:width         \"20px\"\n                                     :background    \"#eee\"\n                                     :border        \"1px solid #e0e0e0\"\n                                     :border-top    \"0\"\n                                     :border-bottom \"0\"\n                                     :z-index       \"2\"}]\n                       [:.divisor-h {:height       \"20px\"\n                                     :background   \"#eee\"\n                                     :border       \"1px solid #e0e0e0\"\n                                     :border-left  \"0\"\n                                     :border-right \"0\"\n                                     :z-index      \"2\"}]\n                       [:.result {:flex     \"1\"\n                                  :position \"relative\"}\n                        [:$CodeMirror {:background \"#f6f7f8\"}]]\n                       [:.trace {:display     \"flex\"\n                                 :padding-top \"18px\"}]]\n   :css-include       [pvt/D3Trace Button]\n   :componentDidMount (fn []\n                        (js/setTimeout\n                          #(fp/set-state! this {:render? true})\n                          100))\n   :initLocalState    (fn []\n                        {:run-query (fn []\n                                      (let [{:ui/keys [query-running?] :as props} (fp/props this)\n                                            {::keys [enable-trace?]} (fp/get-computed props)]\n                                        (if-not query-running?\n                                          (let [props (update props ::request-trace? #(and enable-trace? %))]\n                                            (fp/ptransact! this [`(fm/set-props {:ui/query-running? true})\n                                                                 `(run-query ~props)\n                                                                 `(fm/set-props {:ui/query-running? false})])))))})}\n  (let [run-query (fp/get-state this :run-query)]\n    (dom/div :.container\n      (dom/div :.toolbar\n        (if enable-trace?\n          (dom/label\n            (dom/input {:type     \"checkbox\"\n                        :checked  request-trace?\n                        :onChange #(fm/toggle! this ::request-trace?)})\n            \"Request trace\"))\n        (dom/div :.flex)\n        (button {:onClick #(load-indexes (fp/get-reconciler this))\n                 :style   {:marginRight \"6px\"}}\n          \"Refresh index\")\n        (button {:onClick  run-query\n                 :disabled query-running?}\n          \"Run query\"))\n\n      (dom/div :.query-row\n        (when (fp/get-state this :render?)\n          (cm/pathom\n            (merge {:className   (:editor css)\n                    :style       {:width (str (or (fp/get-state this :query-width) 400) \"px\")}\n                    :value       (or (str query) \"\")\n                    ::pc/indexes (if (map? indexes) (p/elide-not-found indexes))\n                    ::cm/options {::cm/extraKeys\n                                  {\"Cmd-Enter\"   run-query\n                                   \"Ctrl-Enter\"  run-query\n                                   \"Shift-Enter\" run-query\n                                   \"Cmd-J\"       \"pathomJoin\"\n                                   \"Ctrl-Space\"  \"autocomplete\"}}\n                    :onChange    #(fm/set-value! this ::query %)}\n              editor-props)))\n        (pvh/drag-resize this {:attribute :query-width\n                               :axis      \"x\"\n                               :default   400\n                               :props     {:className (:divisor-v css)}}\n          (dom/div))\n        (if (fp/get-state this :render?)\n          (cm/clojure\n            (merge {:className   (:result css)\n                    :value       result\n                    ::cm/options {::cm/readOnly    true\n                                  ::cm/lineNumbers true}}\n              editor-props))))\n      (if trace\n        (pvh/drag-resize this {:attribute :trace-height\n                               :default   default-trace-size\n                               :props     {:className (:divisor-h css)}}\n          (dom/div)))\n      (if trace\n        (dom/div :.trace {:style {:height (str (or (fp/get-state this :trace-height) default-trace-size) \"px\")}}\n          (pvt/d3-trace {::pvt/trace-data      trace\n                         ::pvt/on-show-details #(js/console.log %)}))))))\n\n(def query-editor (fp/computed-factory QueryEditor))\n"]}