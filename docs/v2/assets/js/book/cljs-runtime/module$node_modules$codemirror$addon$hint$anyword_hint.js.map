{
"version":3,
"file":"module$node_modules$codemirror$addon$hint$anyword_hint.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,uDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAIlH,SAAQ,CAACC,GAAD,CAAM,CACS,QAAtB,EAAI,MAAOD,QAAX,EAAmD,QAAnD,EAAkC,MAAOD,OAAzC,CACEE,GAAA,CAAIH,OAAA,CAAQ,+CAAR,CAAJ,CADF,CAE0B,UAArB,EAAI,MAAOI,OAAX,EAAmCA,MAAAC,IAAnC,CACHD,MAAA,CAAO,CAAC,sBAAD,CAAP,CAAiCD,GAAjC,CADG,CAGHA,GAAA,CAAIG,UAAJ,CANW,CAAd,CAAD,CAOG,QAAQ,CAACA,UAAD,CAAa,CAAA,IAGlBC,KAAO,QAEXD,WAAAE,eAAA,CAA0B,MAA1B,CAAkC,SAAlC,CAA6C,QAAQ,CAACC,MAAD,CAASC,OAAT,CAAkB,CAKrE,IAJA,IAAIC,KAAOD,OAAPC,EAAkBD,OAAAC,KAAlBA,EAAkCJ,IAAtC,CACIK,MAAQF,OAARE,EAAmBF,OAAAE,MAAnBA;AAJuBC,GAG3B,CAEIC,IAAML,MAAAM,UAAA,EAFV,CAE8BC,QAAUP,MAAAQ,QAAA,CAAeH,GAAAI,KAAf,CAFxC,CAGIC,IAAML,GAAAM,GAHV,CAGkBC,MAAQF,GAC1B,CAAOE,KAAP,EAAgBV,IAAAW,KAAA,CAAUN,OAAAO,OAAA,CAAeF,KAAf,CAAuB,CAAvB,CAAV,CAAhB,CAAA,CAAsD,EAAEA,KACpDG,QAAAA,CAAUH,KAAVG,EAAmBL,GAAnBK,EAA0BR,OAAAS,MAAA,CAAcJ,KAAd,CAAqBF,GAArB,CAE1BO,QAAAA,CAAOhB,OAAPgB,EAAkBhB,OAAAgB,KAAlBA,EAAkC,EAAtC,KAA0CC,KAAO,EAC7CC,KAAAA,CAAK,IAAIC,MAAJ,CAAWlB,IAAAmB,OAAX,CAAwB,GAAxB,CACT,KAAK,IAAIC,IAAO,EAAhB,CAA0B,CAA1B,EAAmBA,GAAnB,CAA6BA,GAA7B,EAAoC,CAApC,CAEE,IAFqC,IACjCb,KAAOJ,GAAAI,KAD0B,CAChBc,QAAUC,IAAAC,IAAA,CAASD,IAAAE,IAAA,CAASjB,IAAT,CAAgBa,GAAhB,CAAsBnB,KAAtB,CAA6BH,MAAA2B,UAAA,EAA7B,CAAT,CAA2D3B,MAAA4B,SAAA,EAA3D,CAAVL,CAA0FD,GAC/G,CAAOb,IAAP,EAAec,OAAf,CAAwBd,IAAxB,EAAgCa,GAAhC,CAEE,IAFmC,IAC/BO,KAAO7B,MAAAQ,QAAA,CAAeC,IAAf,CADwB,CACFqB,CACjC,CAAOA,CAAP,CAAWX,IAAAY,KAAA,CAAQF,IAAR,CAAX,CAAA,CACMpB,IAAJ,EAAYJ,GAAAI,KAAZ,EAAwBqB,CAAA,CAAE,CAAF,CAAxB,GAAiCf,OAAjC;AACMA,OADN,EACiD,CADjD,EACiBe,CAAA,CAAE,CAAF,CAAAE,YAAA,CAAiBjB,OAAjB,CAA0B,CAA1B,CADjB,EACwDkB,MAAAC,UAAAC,eAAAC,KAAA,CAAqClB,IAArC,CAA2CY,CAAA,CAAE,CAAF,CAA3C,CADxD,GAEEZ,IAAA,CAAKY,CAAA,CAAE,CAAF,CAAL,CACA,CADa,CAAA,CACb,CAAAb,OAAAoB,KAAA,CAAUP,CAAA,CAAE,CAAF,CAAV,CAHF,CAQN,OAAO,CAACb,KAAMA,OAAP,CAAaqB,KAAMzC,UAAA0C,IAAA,CAAelC,GAAAI,KAAf,CAAyBG,KAAzB,CAAnB,CAAoD4B,GAAI3C,UAAA0C,IAAA,CAAelC,GAAAI,KAAf,CAAyBC,GAAzB,CAAxD,CAvB8D,CAAvE,CALsB,CAPxB,CAJmH;",
"sources":["node_modules/codemirror/addon/hint/anyword-hint.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$hint$anyword_hint\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var WORD = /[\\w$]+/, RANGE = 500;\n\n  CodeMirror.registerHelper(\"hint\", \"anyword\", function(editor, options) {\n    var word = options && options.word || WORD;\n    var range = options && options.range || RANGE;\n    var cur = editor.getCursor(), curLine = editor.getLine(cur.line);\n    var end = cur.ch, start = end;\n    while (start && word.test(curLine.charAt(start - 1))) --start;\n    var curWord = start != end && curLine.slice(start, end);\n\n    var list = options && options.list || [], seen = {};\n    var re = new RegExp(word.source, \"g\");\n    for (var dir = -1; dir <= 1; dir += 2) {\n      var line = cur.line, endLine = Math.min(Math.max(line + dir * range, editor.firstLine()), editor.lastLine()) + dir;\n      for (; line != endLine; line += dir) {\n        var text = editor.getLine(line), m;\n        while (m = re.exec(text)) {\n          if (line == cur.line && m[0] === curWord) continue;\n          if ((!curWord || m[0].lastIndexOf(curWord, 0) == 0) && !Object.prototype.hasOwnProperty.call(seen, m[0])) {\n            seen[m[0]] = true;\n            list.push(m[0]);\n          }\n        }\n      }\n    }\n    return {list: list, from: CodeMirror.Pos(cur.line, start), to: CodeMirror.Pos(cur.line, end)};\n  });\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","WORD","registerHelper","editor","options","word","range","RANGE","cur","getCursor","curLine","getLine","line","end","ch","start","test","charAt","curWord","slice","list","seen","re","RegExp","source","dir","endLine","Math","min","max","firstLine","lastLine","text","m","exec","lastIndexOf","Object","prototype","hasOwnProperty","call","push","from","Pos","to"]
}
