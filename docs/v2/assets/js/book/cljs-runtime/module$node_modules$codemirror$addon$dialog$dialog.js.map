{
"version":3,
"file":"module$node_modules$codemirror$addon$dialog$dialog.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/codemirror/addon/dialog/dialog.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$dialog$dialog\"] = function(global,require,module,exports) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Open simple dialogs on top of an editor. Relies on dialog.css.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  function dialogDiv(cm, template, bottom) {\n    var wrap = cm.getWrapperElement();\n    var dialog;\n    dialog = wrap.appendChild(document.createElement(\"div\"));\n    if (bottom)\n      dialog.className = \"CodeMirror-dialog CodeMirror-dialog-bottom\";\n    else\n      dialog.className = \"CodeMirror-dialog CodeMirror-dialog-top\";\n\n    if (typeof template == \"string\") {\n      dialog.innerHTML = template;\n    } else { // Assuming it's a detached DOM element.\n      dialog.appendChild(template);\n    }\n    return dialog;\n  }\n\n  function closeNotification(cm, newVal) {\n    if (cm.state.currentNotificationClose)\n      cm.state.currentNotificationClose();\n    cm.state.currentNotificationClose = newVal;\n  }\n\n  CodeMirror.defineExtension(\"openDialog\", function(template, callback, options) {\n    if (!options) options = {};\n\n    closeNotification(this, null);\n\n    var dialog = dialogDiv(this, template, options.bottom);\n    var closed = false, me = this;\n    function close(newVal) {\n      if (typeof newVal == 'string') {\n        inp.value = newVal;\n      } else {\n        if (closed) return;\n        closed = true;\n        dialog.parentNode.removeChild(dialog);\n        me.focus();\n\n        if (options.onClose) options.onClose(dialog);\n      }\n    }\n\n    var inp = dialog.getElementsByTagName(\"input\")[0], button;\n    if (inp) {\n      inp.focus();\n\n      if (options.value) {\n        inp.value = options.value;\n        if (options.selectValueOnOpen !== false) {\n          inp.select();\n        }\n      }\n\n      if (options.onInput)\n        CodeMirror.on(inp, \"input\", function(e) { options.onInput(e, inp.value, close);});\n      if (options.onKeyUp)\n        CodeMirror.on(inp, \"keyup\", function(e) {options.onKeyUp(e, inp.value, close);});\n\n      CodeMirror.on(inp, \"keydown\", function(e) {\n        if (options && options.onKeyDown && options.onKeyDown(e, inp.value, close)) { return; }\n        if (e.keyCode == 27 || (options.closeOnEnter !== false && e.keyCode == 13)) {\n          inp.blur();\n          CodeMirror.e_stop(e);\n          close();\n        }\n        if (e.keyCode == 13) callback(inp.value, e);\n      });\n\n      if (options.closeOnBlur !== false) CodeMirror.on(inp, \"blur\", close);\n    } else if (button = dialog.getElementsByTagName(\"button\")[0]) {\n      CodeMirror.on(button, \"click\", function() {\n        close();\n        me.focus();\n      });\n\n      if (options.closeOnBlur !== false) CodeMirror.on(button, \"blur\", close);\n\n      button.focus();\n    }\n    return close;\n  });\n\n  CodeMirror.defineExtension(\"openConfirm\", function(template, callbacks, options) {\n    closeNotification(this, null);\n    var dialog = dialogDiv(this, template, options && options.bottom);\n    var buttons = dialog.getElementsByTagName(\"button\");\n    var closed = false, me = this, blurring = 1;\n    function close() {\n      if (closed) return;\n      closed = true;\n      dialog.parentNode.removeChild(dialog);\n      me.focus();\n    }\n    buttons[0].focus();\n    for (var i = 0; i < buttons.length; ++i) {\n      var b = buttons[i];\n      (function(callback) {\n        CodeMirror.on(b, \"click\", function(e) {\n          CodeMirror.e_preventDefault(e);\n          close();\n          if (callback) callback(me);\n        });\n      })(callbacks[i]);\n      CodeMirror.on(b, \"blur\", function() {\n        --blurring;\n        setTimeout(function() { if (blurring <= 0) close(); }, 200);\n      });\n      CodeMirror.on(b, \"focus\", function() { ++blurring; });\n    }\n  });\n\n  /*\n   * openNotification\n   * Opens a notification, that can be closed with an optional timer\n   * (default 5000ms timer) and always closes on click.\n   *\n   * If a notification is opened while another is opened, it will close the\n   * currently opened one and open the new one immediately.\n   */\n  CodeMirror.defineExtension(\"openNotification\", function(template, options) {\n    closeNotification(this, close);\n    var dialog = dialogDiv(this, template, options && options.bottom);\n    var closed = false, doneTimer;\n    var duration = options && typeof options.duration !== \"undefined\" ? options.duration : 5000;\n\n    function close() {\n      if (closed) return;\n      closed = true;\n      clearTimeout(doneTimer);\n      dialog.parentNode.removeChild(dialog);\n    }\n\n    CodeMirror.on(dialog, 'click', function(e) {\n      CodeMirror.e_preventDefault(e);\n      close();\n    });\n\n    if (duration)\n      doneTimer = setTimeout(close, duration);\n\n    return close;\n  });\n});\n\n};"],
"names":["shadow$provide","global","require","module","exports","mod","define","amd","CodeMirror","dialogDiv","cm","template","bottom","dialog","getWrapperElement","wrap","appendChild","document","createElement","className","innerHTML","closeNotification","newVal","state","currentNotificationClose","defineExtension","callback","options","close","inp","value","closed","onClose","parentNode","removeChild","me","focus","getElementsByTagName","selectValueOnOpen","select","onInput","on","e","onKeyUp","onKeyDown","keyCode","closeOnEnter","blur","e_stop","closeOnBlur","button","callbacks","buttons","blurring","i","length","b","e_preventDefault","setTimeout","clearTimeout","doneTimer","duration"]
}
