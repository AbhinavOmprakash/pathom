shadow$provide.module$node_modules$codemirror$addon$hint$show_hint=function(global,require,module,exports){(function(mod){"object"==typeof exports&&"object"==typeof module?mod(require("module$node_modules$codemirror$lib$codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],mod):mod(CodeMirror)})(function(CodeMirror){function Completion(cm,options){this.cm=cm;this.options=options;this.widget=null;this.tick=this.debounce=0;this.startPos=this.cm.getCursor("start");this.startLen=
this.cm.getLine(this.startPos.line).length-this.cm.getSelection().length;var self=this;cm.on("cursorActivity",this.activityFunc=function(){self.cursorActivity()})}function buildKeyMap(completion,handle){function addBinding(key,val){var bound="string"!=typeof val?function(cm){return val(cm,handle)}:baseMap.hasOwnProperty(val)?baseMap[val]:val;ourMap[key]=bound}var baseMap={Up:function(){handle.moveFocus(-1)},Down:function(){handle.moveFocus(1)},PageUp:function(){handle.moveFocus(-handle.menuSize()+
1,!0)},PageDown:function(){handle.moveFocus(handle.menuSize()-1,!0)},Home:function(){handle.setFocus(0)},End:function(){handle.setFocus(handle.length-1)},Enter:handle.pick,Tab:handle.pick,Esc:handle.close},custom=completion.options.customKeys,ourMap=custom?{}:baseMap;if(custom)for(var key$jscomp$0 in custom)custom.hasOwnProperty(key$jscomp$0)&&addBinding(key$jscomp$0,custom[key$jscomp$0]);if(completion=completion.options.extraKeys)for(key$jscomp$0 in completion)completion.hasOwnProperty(key$jscomp$0)&&
addBinding(key$jscomp$0,completion[key$jscomp$0]);return ourMap}function getHintElement(hintsElement,el){for(;el&&el!=hintsElement;){if("LI"===el.nodeName.toUpperCase()&&el.parentNode==hintsElement)return el;el=el.parentNode}}function Widget(completion,data){this.completion=completion;this.data=data;this.picked=!1;var widget=this,cm=completion.cm,hints=this.hints=document.createElement("ul");hints.className="CodeMirror-hints";this.selectedHint=data.selectedHint||0;for(var completions=data.list,i=
0;i<completions.length;++i){var elt=hints.appendChild(document.createElement("li")),cur=completions[i],className="CodeMirror-hint"+(i!=this.selectedHint?"":" CodeMirror-hint-active");null!=cur.className&&(className=cur.className+" "+className);elt.className=className;cur.render?cur.render(elt,data,cur):elt.appendChild(document.createTextNode(cur.displayText||("string"==typeof cur?cur:cur.text)));elt.hintId=i}i=cm.cursorCoords(completion.options.alignWithWord?data.from:null);var left=i.left,top=i.bottom,
below=!0;hints.style.left=left+"px";hints.style.top=top+"px";elt=window.innerWidth||Math.max(document.body.offsetWidth,document.documentElement.offsetWidth);var winH=window.innerHeight||Math.max(document.body.offsetHeight,document.documentElement.offsetHeight);(completion.options.container||document.body).appendChild(hints);cur=hints.getBoundingClientRect();var overlapY=cur.bottom-winH;className=hints.scrollHeight>hints.clientHeight+1;var startScroll=cm.getScrollInfo();0<overlapY&&(overlapY=cur.bottom-
cur.top,0<i.top-(i.bottom-cur.top)-overlapY?(hints.style.top=(top=i.top-overlapY)+"px",below=!1):overlapY>winH&&(hints.style.height=winH-5+"px",hints.style.top=(top=i.bottom-cur.top)+"px",winH=cm.getCursor(),data.from.ch!=winH.ch&&(i=cm.cursorCoords(winH),hints.style.left=(left=i.left)+"px",cur=hints.getBoundingClientRect())));winH=cur.right-elt;0<winH&&(cur.right-cur.left>elt&&(hints.style.width=elt-5+"px",winH-=cur.right-cur.left-elt),hints.style.left=(left=i.left-winH)+"px");if(className)for(i=
hints.firstChild;i;i=i.nextSibling)i.style.paddingRight=cm.display.nativeBarWidth+"px";cm.addKeyMap(this.keyMap=buildKeyMap(completion,{moveFocus:function(n,avoidWrap){widget.changeActive(widget.selectedHint+n,avoidWrap)},setFocus:function(n){widget.changeActive(n)},menuSize:function(){return widget.screenAmount()},length:completions.length,close:function(){completion.close()},pick:function(){widget.pick()},data:data}));if(completion.options.closeOnUnfocus){var closingOnBlur;cm.on("blur",this.onBlur=
function(){closingOnBlur=setTimeout(function(){completion.close()},100)});cm.on("focus",this.onFocus=function(){clearTimeout(closingOnBlur)})}cm.on("scroll",this.onScroll=function(){var curScroll=cm.getScrollInfo(),editor=cm.getWrapperElement().getBoundingClientRect(),newTop=top+startScroll.top-curScroll.top,point=newTop-(window.pageYOffset||(document.documentElement||document.body).scrollTop);below||(point+=hints.offsetHeight);if(point<=editor.top||point>=editor.bottom)return completion.close();
hints.style.top=newTop+"px";hints.style.left=left+startScroll.left-curScroll.left+"px"});CodeMirror.on(hints,"dblclick",function(e){(e=getHintElement(hints,e.target||e.srcElement))&&null!=e.hintId&&(widget.changeActive(e.hintId),widget.pick())});CodeMirror.on(hints,"click",function(e){(e=getHintElement(hints,e.target||e.srcElement))&&null!=e.hintId&&(widget.changeActive(e.hintId),completion.options.completeOnSingleClick&&widget.pick())});CodeMirror.on(hints,"mousedown",function(){setTimeout(function(){cm.focus()},
20)});CodeMirror.signal(data,"select",completions[this.selectedHint],hints.childNodes[this.selectedHint]);return!0}function applicableHelpers(cm,helpers){if(!cm.somethingSelected())return helpers;cm=[];for(var i=0;i<helpers.length;i++)helpers[i].supportsSelection&&cm.push(helpers[i]);return cm}function fetchHints(hint,cm,options,callback){hint.async?hint(cm,callback,options):(hint=hint(cm,options))&&hint.then?hint.then(callback):callback(hint)}CodeMirror.showHint=function(cm,getHints,options){if(!getHints)return cm.showHint(options);
options&&options.async&&(getHints.async=!0);getHints={hint:getHints};if(options)for(var prop in options)getHints[prop]=options[prop];return cm.showHint(getHints)};CodeMirror.defineExtension("showHint",function(options){var pos=this.getCursor("start"),editor=this.options.hintOptions,out={},prop;for(prop in defaultOptions)out[prop]=defaultOptions[prop];if(editor)for(prop in editor)void 0!==editor[prop]&&(out[prop]=editor[prop]);if(options)for(prop in options)void 0!==options[prop]&&(out[prop]=options[prop]);
out.hint.resolve&&(out.hint=out.hint.resolve(this,pos));options=out;pos=this.listSelections();if(!(1<pos.length)){if(this.somethingSelected()){if(!options.hint.supportsSelection)return;for(prop=0;prop<pos.length;prop++)if(pos[prop].head.line!=pos[prop].anchor.line)return}this.state.completionActive&&this.state.completionActive.close();pos=this.state.completionActive=new Completion(this,options);pos.options.hint&&(CodeMirror.signal(this,"startCompletion",this),pos.update(!0))}});var requestAnimationFrame=
window.requestAnimationFrame||function(fn){return setTimeout(fn,1E3/60)},cancelAnimationFrame=window.cancelAnimationFrame||clearTimeout;Completion.prototype={close:function(){this.active()&&(this.tick=this.cm.state.completionActive=null,this.cm.off("cursorActivity",this.activityFunc),this.widget&&this.data&&CodeMirror.signal(this.data,"close"),this.widget&&this.widget.close(),CodeMirror.signal(this.cm,"endCompletion",this.cm))},active:function(){return this.cm.state.completionActive==this},pick:function(data,
i){i=data.list[i];i.hint?i.hint(this.cm,data,i):this.cm.replaceRange("string"==typeof i?i:i.text,i.from||data.from,i.to||data.to,"complete");CodeMirror.signal(data,"pick",i);this.close()},cursorActivity:function(){this.debounce&&(cancelAnimationFrame(this.debounce),this.debounce=0);var pos=this.cm.getCursor(),line=this.cm.getLine(pos.line);if(pos.line!=this.startPos.line||line.length-pos.ch!=this.startLen-this.startPos.ch||pos.ch<this.startPos.ch||this.cm.somethingSelected()||pos.ch&&this.options.closeCharacters.test(line.charAt(pos.ch-
1)))this.close();else{var self=this;this.debounce=requestAnimationFrame(function(){self.update()});this.widget&&this.widget.disable()}},update:function(first){if(null!=this.tick){var self=this,myTick=++this.tick;fetchHints(this.options.hint,this.cm,this.options,function(data){self.tick==myTick&&self.finishUpdate(data,first)})}},finishUpdate:function(data,first){this.data&&CodeMirror.signal(this.data,"update");first=this.widget&&this.widget.picked||first&&this.options.completeSingle;this.widget&&this.widget.close();
(this.data=data)&&data.list.length&&(first&&1==data.list.length?this.pick(data,0):(this.widget=new Widget(this,data),CodeMirror.signal(data,"shown")))}};Widget.prototype={close:function(){if(this.completion.widget==this){this.completion.widget=null;this.hints.parentNode.removeChild(this.hints);this.completion.cm.removeKeyMap(this.keyMap);var cm=this.completion.cm;this.completion.options.closeOnUnfocus&&(cm.off("blur",this.onBlur),cm.off("focus",this.onFocus));cm.off("scroll",this.onScroll)}},disable:function(){this.completion.cm.removeKeyMap(this.keyMap);
var widget=this;this.keyMap={Enter:function(){widget.picked=!0}};this.completion.cm.addKeyMap(this.keyMap)},pick:function(){this.completion.pick(this.data,this.selectedHint)},changeActive:function(i,avoidWrap){i>=this.data.list.length?i=avoidWrap?this.data.list.length-1:0:0>i&&(i=avoidWrap?0:this.data.list.length-1);this.selectedHint!=i&&(avoidWrap=this.hints.childNodes[this.selectedHint],avoidWrap.className=avoidWrap.className.replace(" CodeMirror-hint-active",""),avoidWrap=this.hints.childNodes[this.selectedHint=
i],avoidWrap.className+=" CodeMirror-hint-active",avoidWrap.offsetTop<this.hints.scrollTop?this.hints.scrollTop=avoidWrap.offsetTop-3:avoidWrap.offsetTop+avoidWrap.offsetHeight>this.hints.scrollTop+this.hints.clientHeight&&(this.hints.scrollTop=avoidWrap.offsetTop+avoidWrap.offsetHeight-this.hints.clientHeight+3),CodeMirror.signal(this.data,"select",this.data.list[this.selectedHint],avoidWrap))},screenAmount:function(){return Math.floor(this.hints.clientHeight/this.hints.firstChild.offsetHeight)||
1}};CodeMirror.registerHelper("hint","auto",{resolve:function(cm$jscomp$0,pos){var helpers=cm$jscomp$0.getHelpers(pos,"hint"),words;return helpers.length?(cm$jscomp$0=function(cm,callback,options){function run(i){if(i==app.length)return callback(null);fetchHints(app[i],cm,options,function(result){result&&0<result.list.length?callback(result):run(i+1)})}var app=applicableHelpers(cm,helpers);run(0)},cm$jscomp$0.async=!0,cm$jscomp$0.supportsSelection=!0,cm$jscomp$0):(words=cm$jscomp$0.getHelper(cm$jscomp$0.getCursor(),
"hintWords"))?function(cm){return CodeMirror.hint.fromList(cm,{words:words})}:CodeMirror.hint.anyword?function(cm,options){return CodeMirror.hint.anyword(cm,options)}:function(){}}});CodeMirror.registerHelper("hint","fromList",function(cm,options){var cur=cm.getCursor(),token=cm.getTokenAt(cur);cm=CodeMirror.Pos(cur.line,token.start);token.start<cur.ch&&/\w/.test(token.string.charAt(cur.ch-token.start-1))?token=token.string.substr(0,cur.ch-token.start):(token="",cm=cur);for(var found=[],i=0;i<options.words.length;i++){var word=
options.words[i];word.slice(0,token.length)==token&&found.push(word)}if(found.length)return{list:found,from:cm,to:cur}});CodeMirror.commands.autocomplete=CodeMirror.showHint;var defaultOptions={hint:CodeMirror.hint.auto,completeSingle:!0,alignWithWord:!0,closeCharacters:/[\s()\[\]{};:>,]/,closeOnUnfocus:!0,completeOnSingleClick:!0,container:null,customKeys:null,extraKeys:null};CodeMirror.defineOption("hintOptions",null)})}
//# sourceMappingURL=module$node_modules$codemirror$addon$hint$show_hint.js.map
